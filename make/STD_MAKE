#    DMF Distributed Multiplatform Framework (the initial goal of this library)
#    This file is part of lbDMF.
#    Copyright (C) 2002  Lothar Behrens (lothar.behrens@lollisoft.de)
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Lesser General Public
#    License as published by the Free Software Foundation; either
#    version 2.1 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public
#    License along with this library; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
#    The author of this work will be reached by e-Mail or paper mail.
#    e-Mail: lothar.behrens@lollisoft.de
#    p-Mail: Lothar Behrens
#            Rosmarinstr. 3
#
#            40235 DÅsseldorf (germany)
# **************************************************************
# * $Locker:  $
# * $Revision: 1.45 $
# * $Name:  $
# * $Id: STD_MAKE,v 1.45 2004/06/07 20:10:48 lollisoft Exp $
# *
# * $Log: STD_MAKE,v $
# * Revision 1.45  2004/06/07 20:10:48  lollisoft
# * Added support for plugins
# *
# * Revision 1.44  2004/05/08 10:41:32  lollisoft
# * Activated warnings
# *
# * Revision 1.43  2004/04/10 17:54:25  lollisoft
# * Current version runs on linux again. There was a bug in additional linux code to strcat to a variable. This variable was given as a parameter and therefore I cannot assume, that I am able to have a big enough buffer for that action. Electric Fence gave me the hint for that bug.
# *
# * Revision 1.42  2003/12/13 10:56:26  lollisoft
# * Database improovements and changes in my licence adress.
# * The database part is still not working by updating columns
# *
# * Revision 1.41  2003/09/10 19:33:59  lollisoft
# * Bug in using absolute path solved
# *
# * Revision 1.40  2003/09/05 15:46:22  lollisoft
# * Last changes to try to make setup distribution and before moving to D¸sseldorf
# *
# * Revision 1.39  2003/07/31 20:31:35  lollisoft
# * EXE also with sym file
# *
# * Revision 1.38  2003/07/15 22:11:58  lollisoft
# * Corrected link and compiler flags
# *
# * Revision 1.37  2003/06/23 19:47:30  lollisoft
# * reuse dwarf and best optimations
# *
# * Revision 1.36  2003/05/29 08:31:30  lollisoft
# * Tried to compile lbDB, but may be also compilable with prior version
# *
# * Revision 1.35  2003/04/28 20:39:58  lollisoft
# * Moved back to watcom
# *
# * Revision 1.34  2003/03/15 01:01:57  lollisoft
# * Removed the problem with _chkesp() failure. But still crash in my GUI app
# *
# * Revision 1.33  2003/02/17 21:34:43  lollisoft
# * Much problems with compilation solved, bu wy came this ??
# *
# * Revision 1.32  2003/01/27 21:20:18  lothar
# * May not help
# *
# * Revision 1.31  2003/01/27 19:31:55  lothar
# * Changes do not work with GUI variant
# *
# * Revision 1.30  2003/01/15 22:42:45  lothar
# * Compiles with MSC
# *
# * Revision 1.29  2002/12/29 16:09:30  lothar
# * Intent to go public
# *
# * Revision 1.28  2002/12/07 06:55:23  lothar
# * Current Linux attempt is buggy
# *
# * Revision 1.27  2002/11/29 19:50:27  lothar
# * Compiles again under linux, but some problems at runtime with DOMString
# *
# * Revision 1.26  2002/11/08 18:50:25  lothar
# * Watcom compiler produces internal error E095 with -d2 on my code.
# * Use -d1 instead.
# *
# * Revision 1.25  2002/10/11 17:20:57  lothar
# * Before CL_LOG change
# *
# * Revision 1.24  2002/10/04 16:53:12  lothar
# * Replaced old LOG macro with the new
# * _LOG << "text" << integer value LOG_
# * combination. This makes sprintf obsolete.
# *
# * Revision 1.23  2002/10/01 19:23:12  lothar
# * Broken
# *
# * Revision 1.22  2002/09/19 19:34:12  lothar
# * Buggy version - only, if menu is really created
# *
# * Revision 1.21  2002/09/05 20:12:48  lothar
# * Using dwarf debug format
# *
# * Revision 1.20  2002/09/04 17:52:12  lothar
# * Problems with stack cleanup
# *
# * Revision 1.19  2002/07/23 17:55:13  lothar
# * Current version runs
# *
# * Revision 1.18  2002/05/29 19:07:59  lothar
# * Minor changes
# *
# * Revision 1.17  2002/04/19 17:43:45  lothar
# * Added -hc due to debuging compilation problems
# * (Fatal segment too long)
# *
# * Revision 1.16  2002/04/15 18:25:16  lothar
# * Huge changes - works good
# *
# * Revision 1.15  2002/02/25 06:39:08  lothar
# * Bugfix in msc make part
# *
# * Revision 1.14  2001/12/16 17:40:19  lothar
# * Added definitions
# *
# * Revision 1.13  2001/12/15 18:17:10  lothar
# * Many changes to let compile my project (watcom and m$)
# *
# * Revision 1.12  2001/12/12 17:27:54  lothar
# * Hehe - runs under linux
# *
# * Revision 1.11  2001/11/21 21:59:42  lothar
# * Added RM variable
# *
# * Revision 1.10  2001/11/21 20:40:54  lothar
# * Added the libdir variable
# *
# * Revision 1.9  2001/11/20 19:58:38  lothar
# * Added absolute path as DEVROOT
# *
# * Revision 1.8  2001/11/10 12:48:49  lothar
# * Minor changes to compile
# *
# * Revision 1.7  2001/11/08 20:48:16  lothar
# * More standard settings
# *
# * Revision 1.6  2001/11/06 21:52:25  lothar
# * no message
# *
# * Revision 1.5  2001/11/05 20:24:24  lothar
# * More standard values
# *
# * Revision 1.4  2001/10/20 21:49:52  lothar
# * Tested under Windows
# *
# * Revision 1.3  2001/10/20 21:37:45  lothar
# * Changed to use under linux
# *
# * Revision 1.2  2001/06/24 18:49:42  lothar
# * Added revision history
# *
# **************************************************************

# In order to use one master file for make configuration, this file
# will be rewritten for GNU make

ifeq ($(OSTYPE), Windows_NT)

DEVROOT_MAKE_INTERNAL=$(DEVROOT_MAKE)


# Set standard compiler
COMPILER=WATCOM
#COMPILER=MICROSOFT
MODE=_DEBUG
#MODE=

STD_INCL_WATCOM =-i=. -i=$(DEVROOT)\\Tools\\WATCOM\\h -i=$(DEVROOT)\\Tools\\WATCOM\\h\\nt -i=$(DEVROOT)\\projects\\cpp\\interfaces -i=$(DEVROOT)\\projects\\cpp\\include -i=$(DEVROOT)\\projects\\dll\\include -i=$(DEVROOT)\\projects\\lib\\include
#ANAKIN
#STD_INCL_MICROSOFT = /I "." /I "F:\develop\NT\MSC\VC98\Include" /I "Q:\Develop\xml\xml4csrc3_3_1\src" /I "Q:\Develop\Projects\CPP\include" /I "Q:\Develop\Projects\CPP\interfaces" /I "Q:\Develop\Projects\CPP\basedevelopment\lbclasses"
#LOTHARBNOTEBOOK
STD_INCL_MICROSOFT = /I "." /I "$(DEVROOT)\Tools\msc\VC98\Include" /I "$(DEVROOT)\xml\xml4csrc3_3_1\src" /I "$(DEVROOT)\Projects\CPP\include" /I "$(DEVROOT)\Projects\CPP\interfaces" /I "$(DEVROOT)\Projects\CPP\basedevelopment\lbclasses"

STD_INCL = $(STD_INCL_WATCOM)


WATCOM_WARN=-w3
WATCOM_OPTIMIZE=-otexan
WATCOM_RELAX_ALIAS=#-oa
WATCOM_ERRCOUNT=-e25
WATCOM_QUIET=-zq
WATCOM_CALLING_CONV=-5r #-zz
WATCOM_DLLTARGET=-bd
WATCOM_LIBTARGET=
WATCOM_THREAD_MODEL=#-bm
WATCOM_STDDEBUG=-d2 -hd
WATCOM_STACK=#-of

WATCOM_STD_C_OPS= \
-DWINDOWS \
$(WATCOM_WARN) \
$(WATCOM_ERRCOUNT) \
$(WATCOM_QUIET) \
$(WATCOM_OPTIMIZE) \
$(WATCOM_RELAX_ALIAS) \
$(WATCOM_THREAD_MODEL) \
$(WATCOM_CALLING_CONV) \
$(WATCOM_STACK)

OBJ =obj
# Watcom -zp4
C_EXEOPS_WATCOM_DEBUG= $(WATCOM_STD_C_OPS) $(WATCOM_STDDEBUG) -bt=nt -mf #-hd

C_DLLOPS_WATCOM   =  $(WATCOM_STD_C_OPS) $(WATCOM_DLLTARGET)                       -bt=nt -mf #-hd

C_DLLOPS_WATCOM_DEBUG = $(WATCOM_STD_C_OPS) $(WATCOM_STDDEBUG) $(WATCOM_DLLTARGET) -bt=nt -mf #-hd

C_LIBOPS_WATCOM   =  $(WATCOM_STD_C_OPS) $(WATCOM_LIBTARGET)                       -bt=nt -mf #-hd

C_LIBOPS_WATCOM_DEBUG = $(WATCOM_STD_C_OPS) $(WATCOM_STDDEBUG) $(WATCOM_LIBTARGET) -bt=nt -mf #-hd

CC =wpp386
RM =del

# Microsoft
OUTDIR=.
INTDIR=.
#/D "LBDOMCONFIG_EXPORTS" /Fp"$(INTDIR)\lbDOMConfig.pch"
MSC_BASIC_EXE      = /MT  /nologo /W3 /GX /O2  /D "WINDOWS" /D "LB_RUNTIME_LINK" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /YX /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c 
MSC_BASIC_EXE_NODBG= /O2         
MSC_BASIC_EXE_DEBUG= /Gm /ZI /Od /YX /W3 



#/Fp"$(INTDIR)\lbDOMConfig.pch"
#/D "LBDOMCONFIG_EXPORTS"   /Ge    /Gd         /MTd          /O2   

# alt
#STD_MICROSOFT=\
#/D "WINDOWS" \
#/D "LB_RUNTIME_LINK" \
#/D "WIN32" \
#/D "NDEBUG" \
#/D "_WINDOWS" \
#/D "_MBCS" \
#/D "_USRDLL" \
#/YX \
#/Fo"$(INTDIR)\\" \
#/Fd"$(INTDIR)\\" \
#/FD /c 


#?/D__WINDOWS95__ 

STD_MICROSOFT=\
/D "WIN32" \
/D "WINDOWS" \
/D "_WINDOWS" \
/D "__WINDOWS__" \
/D "__WXMSW__" \
/D "__WIN95__" \
/D "__WIN32__" \
/D WINVER=0x0400 \
/D "STRICT" \
/D "LB_RUNTIME_LINK" \
/D "_MBCS" \
/D "_USRDLL" \
/YX \
/Fo"$(INTDIR)\\" \
/Fd"$(INTDIR)\\" \
/FD /c 


#                           /GZ
C_EXEOPS_MICROSOFT =                                   /nologo /MT  /W3     /GX           $(STD_MICROSOFT)
C_EXEOPS_MICROSOFT_DEBUG =  /F100000      /D __WXDEBUG__ /D DEBUG=1 /D _DEBUG /nologo /MDd /W3 /Od /GX   /ZI     $(STD_MICROSOFT)
C_DLLOPS_MICROSOFT =                                   /nologo /MT  /W3     /GX           $(STD_MICROSOFT)
C_DLLOPS_MICROSOFT_DEBUG =  /F100000      /D __WXDEBUG__ /D DEBUG=1 /D _DEBUG /nologo /MDd /W3 /Od /GX   /ZI     $(STD_MICROSOFT)

LINK_MICROSOFT=link.exe
 
LINK_MICROSOFT_OBJS=


C_EXEOPS = $(C_EXEOPS_WATCOM$(MODE))
C_DLLOPS = $(C_DLLOPS_WATCOM$(MODE))
C_LIBOPS = $(C_LIBOPS_WATCOM$(MODE))

# Watcom
L_EXEOPS_WATCOM = op symf d dwarf
LINK_WATCOM =wlink op q op symf d dwarf
L_DLLOPS_WATCOM =SYS nt_dll op m op maxe=25 op q op symf d dwarf

# Microsoft
#/pdb:"$(OUTDIR)\lbDOMConfig.pdb"
#/out:"$(OUTDIR)\lbDOMConfig.dll"
#/implib:"$(OUTDIR)\lbDOMConfig.lib"
L_DLLOPS_MICROSOFT =kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib \
shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo \
/dll /incremental:yes /debug /machine:I386 \
/libpath:"Q:\Develop\xml\xml4csrc3_3_1\Build\Win32\VC6" \
/libpath:"F:\develop\NT\MSC\VC98\Lib"

# Standard link ops
L_EXEOPS = $(L_EXEOPS_WATCOM)
LINK     = $(LINK_WATCOM)
L_DLLOPS = $(L_DLLOPS_WATCOM)
LNKDLLOPS = $(L_DLLOPS_WATCOM)

CP =copy
EXEDIR =$(DEVROOT)\Projects\bin
DLLDIR =$(DEVROOT)\Projects\dll
PLUGINDIR =$(DEVROOT)\Projects\plugins

LIBDIR =$(DEVROOT)\Projects\lib
DLLLIBDIR =$(DEVROOT)\Projects\dll\libs
PLUGINLIBDIR =$(DEVROOT)\Projects\plugins\libs


endif

ifeq ($(OSTYPE), linux)

STD_INCL = -I $(DEVROOT)/Projects/CPP/BaseDevelopment/lbHook/linuxCode \
	-I $(DEVROOT)/Projects/CPP/interfaces \
	-I $(DEVROOT)/Projects/CPP/include \
	-I $(DEVROOT)/Projects/CPP/BaseDevelopment/lbclasses \
	-I /usr/include \
	-I /usr/include/sys \
	-I . 

OBJ =o
C_OPS   = -c -DUNIX -DLINUX
C_SOOPS = $(C_OPS)
C_ELFOPS= $(C_OPS)
L_OPS   = -o
LIBS    = -ldl -lstdc++
CC =cc
LD =cc
CP =cp
EXEDIR =
endif

