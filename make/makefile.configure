
all: makefile

ifeq ($(OSTYPE), linux)
DEVROOT_MAKE=$(DEVROOT)
MKMK=mkmk
endif
ifeq ($(OSTYPE), osx)
DEVROOT_MAKE=$(DEVROOT)
MKMK=~/bin/mkmk
endif
ifeq ($(OSTYPE), Windows_NT)
MKMK=mkmk
endif
_MODULE=$(MODULE)

ifeq ($(TARGET), tvision_dll)
makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).dll >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@rm -f include/tv/configtv.h
	@rm -f $(_MODULE).bak	
	@cp include/tv/configtv.watcom.h include/tv/configtv.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) $(TARGET) $(_MODULE) include,include/tv,include/cl,include/win32 \
	classes/*.cc \
	classes/win32/*.cc \
	classes/wingr/*.cc \
	classes/winnt/*.cc \
	compat/*.c \
	compat/*.cc \
	names/*.cc \
	stream/*.cc \
	intl/dummy/*.c \
	misc.cc \
	newstr.cc \
	msgbox.cc \
	histlist.cc \
	drivers2.cc \
	>> makefile
endif

ifeq ($(TARGET), tvision_exe)
makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).exe >> makefile
	@rm -f $(_MODULE).bak
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) exe $(_MODULE) include,include/tv,include/cl,include/win32 \
	*.cc \
	>> makefile
endif

ifeq ($(TARGET), tvision_elf)
makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE) >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) elf $(_MODULE) include,include/tv,include/cl,include/win32 \
	*.cc \
	>> makefile
endif

ifeq ($(TARGET), plugin)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).dll >> makefile
	@rm -f $(_MODULE).bak
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), wxplugin)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).dll >> makefile
	@rm -f $(_MODULE).bak
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), soplugin)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), wxsoplugin)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), dll)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@rm -f $(_MODULE).bak
	@echo all: $(_MODULE).$(TARGET) >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.c *.cpp >> makefile

endif

ifeq ($(TARGET), bundle)

DIRECTORIES = $(foreach s, $(DIRECTORY), "$s"/*.cpp)


makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE) >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) $(TARGET) $(_MODULE) . *.cpp >> makefile
endif

ifeq ($(TARGET), elf)

DIRECTORIES = $(foreach s, $(DIRECTORY), $s/*.cpp)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE) >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	$(MKMK) $(TARGET) $(_MODULE) . *.c *.cpp >> makefile

endif

ifeq ($(TARGET), so)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), sobundle)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), wxso)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), wxshared)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@echo all: $(_MODULE).so >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../dosdir *.cpp >> makefile

endif

ifeq ($(TARGET), exe)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@rm -f $(_MODULE).bak
	@echo all: $(_MODULE).exe >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) $(TARGET) $(_MODULE) ../h *.cpp *.c >> makefile

endif

ifeq ($(TARGET), wcc386)

makefile: makefile.module \
$(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/Makefile \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.template \
$(DEVROOT_MAKE)/Projects/CPP/make/STD_MAKE \
$(DEVROOT_MAKE)/Projects/CPP/make/makefile.configure
	@cat $(DEVROOT_MAKE)/Projects/CPP/make/makefile.template > makefile
	@cat makefile.module >> makefile
	@echo Path=$(PATH) >> makefile
	@rm -f $(_MODULE).bak
	@echo all: $(_MODULE).exe >> makefile
	@rm -f $(DEVROOT_MAKE)/Projects/CPP/include/lbkey.h
	@cp -f $(DEVROOT_MAKE)/Projects/CPP/BaseDevelopment/lbclasses/lbkey.h $(DEVROOT_MAKE)/Projects/CPP/include
	@$(MKMK) exe $(_MODULE) ../h c/*.cpp c/*.c >> makefile

endif

