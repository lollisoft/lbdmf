format 22
"lbDB" // BaseDevelopment::lbDB
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_full_members_definition default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default drawing_language default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default
  show_activities default region_horizontally default drawing_language default
  
  classview 128711 "lbDB"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_full_members_definition default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default
    //col diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default
    //seq diagram settings
    show_full_operations_definition default write_horizontally default drawing_language default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default
    show_activities default region_horizontally default drawing_language default
    //class settings
    class 144711 "lbFakeDelete"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * \\brief lbFakeDelete - Does not directly delete rows, only mark it as deleted.
 *
 * This class is intented to avoid crashes due to ODBC drivers, that may crash
 * my application when deleting rows over the cursor library.
 "
      operation 201799 "lbFakeDelete"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 201927 "~lbFakeDelete"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end
    end

    class 151879 "lbDBView"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass def lbDBView:0:"
      classrelation 144455 // <generalisation>
	relation 144455 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 144455 // <generalisation>
	  b parent class_ref 152007 // lb_I_MVC_View
      end

      operation 227015 "lbDBView"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 227143 "~lbDBView"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 227271 "setViewSource"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "q" type class_ref 141767 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "...svirtual lbErrCodes LB_STDCALL setViewSource\\40\\lb_I_Unknown\\42\\ q\\41\\\\59\\:8:
 The view source is the data, that should be displayed.
         * As this would be a database view, the function tries to get
         * a lb_I_Query source.
         "
      end
    end

    class 152135 "lbBoundColumns"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...e
...sclass def lbBoundColumns:0:"
      classrelation 144583 // <generalisation>
	relation 144583 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 144583 // <generalisation>
	  b parent class_ref 131399 // lb_I_ColumnBinding
      end

      operation 227399 "lbBoundColumns"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} { ref = STARTREF; ArraySize = 1; };
"
	
	
      end

      operation 227527 "~lbBoundColumns"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
		_CL_VERBOSE << \"lbBoundColumns::~lbBoundColumns() called.\" LOG_
	};
"
	
	
      end

      operation 227655 "setBoundColumns"
	public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "bc" type class_ref 140103 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 227783 "getBoundColumn"
	public return_type class_ref 152263 // lb_I_BoundColumn
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_BoundColumn\\42\\ LB_STDCALL lbBoundColumns\\58\\\\58\\getBoundColumn\\40\\int column\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 227911 "getColumnCount"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint             LB_STDCALL lbBoundColumns\\58\\\\58\\getColumnCount\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228039 "setQuery"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" type class_ref 152391 // lb_I_Query
	  param inout name "ReadonlyColumns" type class_ref 140103 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes      LB_STDCALL lbBoundColumns\\58\\\\58\\setQuery\\40\\lbQuery\\42\\ q\\44\\ lb_I_Container\\42\\ ReadonlyColumns\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "*
         * Set a currently used query to bind their columns.
         "
      end

      operation 228167 "getMode"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228295 "getString"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "instance" type class_ref 141255 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes      LB_STDCALL lbBoundColumns\\58\\\\58\\getString\\40\\int column\\44\\ lb_I_String\\42\\ instance\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "*
         * Convert the internal data to a char array and return the data.
         "
      end

      operation 228423 "getLong"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "instance" type class_ref 141639 // lb_I_Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228551 "getString"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "instance" type class_ref 141255 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228679 "setString"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "instance" type class_ref 141255 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...slbErrCodes      LB_STDCALL lbBoundColumns\\58\\\\58\\setString\\40\\char\\42\\ column\\44\\ lb_I_String\\42\\ instance\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228807 "unbindReadonlyColumns"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbBoundColumns\\58\\\\58\\unbindReadonlyColumns\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 228935 "rebindReadonlyColumns"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbBoundColumns\\58\\\\58\\rebindReadonlyColumns\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229063 "isNull"
	public explicit_return_type "bool"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sbool LB_STDCALL lbBoundColumns\\58\\\\58\\isNull\\40\\int pos\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229191 "getColumnType"
	public return_type class_ref 152519 // lbDBColumnTypes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_Query\\58\\\\58\\lbDBColumnTypes LB_STDCALL lbBoundColumns\\58\\\\58\\getColumnType\\40\\int pos\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229319 "getColumnType"
	public return_type class_ref 152519 // lbDBColumnTypes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_Query\\58\\\\58\\lbDBColumnTypes LB_STDCALL lbBoundColumns\\58\\\\58\\getColumnType\\40\\char\\42\\ name\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229447 "getColumnIndex"
	public explicit_return_type "int"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint LB_STDCALL lbBoundColumns\\58\\\\58\\getColumnIndex\\40\\char\\42\\ name\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229575 "setReadonly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param in name "updateable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbBoundColumns\\58\\\\58\\setReadonly\\40\\char\\42\\ column\\44\\ bool updateable\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229703 "getReadonly"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "column" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sbool LB_STDCALL lbBoundColumns\\58\\\\58\\getReadonly\\40\\char\\42\\ column\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229831 "rebind"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbBoundColumns\\58\\\\58\\rebind\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 229959 "getArraySize"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ArraySize; };
"
	
	
      end

      classrelation 144711 // query (<unidirectional association>)
	relation 144711 --->
	  a role_name "query" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 144711 // query (<unidirectional association>)
	  b parent class_ref 152647 // lbQuery
      end
    end

    class 152647 "lbQuery"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass def lbQuery:0:
* \\brief Implementation using ODBC backend.
 "
      classrelation 144839 // <generalisation>
	relation 144839 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 144839 // <generalisation>
	  b parent class_ref 152391 // lb_I_Query
      end

      operation 230087 "lbQuery"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "readonly" explicit_type "int"
	    defaultvalue " 1"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${)}${volatile}${throw} { 
		peeking = true;
		ref = STARTREF;
		_readonly = readonly; 
		hdbc = 0; 
		hstmt = 0; 
		henv = 0;
		hupdatestmt = 0;
		databound = 0; 
		count = 0; 
		firstfetched = 0;
		cols = 0;
		cursor = 1;
		haveData = false;
		mode = 0;
		_autoRefresh = false;

		preparingFKColumns = 0;
		
		fetchstatus = 0;
		
		if (ReadOnlyColumns == NULL) {
		        REQUEST(getModuleInstance(), lb_I_Container, ReadOnlyColumns)
		}
	};
"
	
	
      end

      operation 230215 "~lbQuery"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
		_CL_VERBOSE << \"lbQuery::~lbQuery() called. (\" << szSql << \")\" LOG_
	};
"
	
	
      end

      operation 230343 "registerView"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "view" type class_ref 152007 // lb_I_MVC_View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "...svirtual lbErrCodes LB_STDCALL \\40\\un\\41\\registerView\\40\\lb_I_MVC_View\\42\\ view\\41\\\\59\\:8:
 MVC View mode 

	 * As a sample may be a graphical view for the result of the interpreted
	 * graphics and the textual view. The controller then might use one button
	 * for updating the model and the model then informs its views.
	 *
	 * For the future porting of FRS I would have a graphical view of the reserved
	 * places. It will show reserved as red and free as green.
	 *
	 * The source code for that object will call - maybe - 
	 * getColor(\"Reserved-Status\", me).
	 *
	 * The dialog to reserve a place will update the data and therefore the model
	 * will inform also the graphical view.
	 "
      end

      operation 230471 "unregisterView"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "view" type class_ref 152007 // lb_I_MVC_View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 230599 "skipFKCollecting"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...senable and skip FK collection:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "...e"
      end

      operation 230727 "enableFKCollecting"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 230855 "prepareFKList"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\prepareFKList\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 230983 "getTableName"
	public explicit_return_type "char"
	nparams 1
	  param inout name "columnName" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231111 "dbError"
	public explicit_return_type "void"
	nparams 2
	  param inout name "lp" explicit_type "char"
	  param in name "hstmt" type class_ref 152775 // HSTMT
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\dbError\\40\\char\\42\\ lp\\44\\ HSTMT hstmt\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231239 "PrintData"
	public explicit_return_type "void"
	nparams 1
	  param in name "reverse" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\PrintData\\40\\bool reverse\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231367 "PrintCurrent"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\PrintCurrent\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231495 "PrintHeader"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\PrintHeader\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231623 "PrintFooter"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\PrintFooter\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 231751 "skipPeeking"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { peeking = false; };
"
	
	
      end

      operation 231879 "query"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" explicit_type "char"
	  param in name "bind" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\query\\40\\char\\42\\ q\\44\\ bool bind\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment " Set the SQL query "
      end

      operation 232007 "bind"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\bind\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 232135 "add"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\add\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 232263 "isAdding"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mode; };
"
	
	
      end

      operation 232391 "remove"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\remove\\40\\\\41\\:0:
//#define CREATE_DYNAMIC_STATEMENTS

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "*
	 * Deletes the current entry.
	 "
      end

      operation 232519 "update"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\update\\40\\\\41\\:0:
//#define USE_CURRENT_OF

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "*
	 * Updates the modified data or stores new data (added via add())
	 "
      end

      operation 232647 "getColumns"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint LB_STDCALL lbQuery\\58\\\\58\\getColumns\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "
	 * General information based on the given query.
	 "
      end

      operation 232775 "lbQuery::hasColumnName"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 232903 "getColumnName"
	public explicit_return_type "char"
	nparams 1
	  param in name "col" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233031 "hasFKColumn"
	public explicit_return_type "int"
	nparams 1
	  param inout name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint LB_STDCALL lbQuery\\58\\\\58\\hasFKColumn\\40\\char\\42\\ FKName\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233159 "getFKColumns"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint LB_STDCALL lbQuery\\58\\\\58\\getFKColumns\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233287 "getFKColumn"
	public return_type class_ref 141255 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_String\\42\\ LB_STDCALL lbQuery\\58\\\\58\\getFKColumn\\40\\int pos\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233415 "getFKColumn"
	public return_type class_ref 141255 // lb_I_String
	nparams 2
	  param inout name "table" explicit_type "char"
	  param inout name "primary" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_String\\42\\ LB_STDCALL lbQuery\\58\\\\58\\getFKColumn\\40\\char\\42\\ table\\44\\ char\\42\\ primary\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233543 "getPKTable"
	public return_type class_ref 141255 // lb_I_String
	nparams 1
	  param in name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_String\\42\\ LB_STDCALL lbQuery\\58\\\\58\\getPKTable\\40\\char const \\42\\ FKName\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233671 "getPKColumn"
	public return_type class_ref 141255 // lb_I_String
	nparams 1
	  param in name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_String\\42\\ LB_STDCALL lbQuery\\58\\\\58\\getPKColumn\\40\\char const \\42\\ FKName\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233799 "getPKColumns"
	public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sint LB_STDCALL lbQuery\\58\\\\58\\getPKColumns\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 233927 "getPKColumn"
	public return_type class_ref 141255 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_String\\42\\ LB_STDCALL lbQuery\\58\\\\58\\getPKColumn\\40\\int pos\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234055 "isNull"
	cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sbool LB_STDCALL lbQuery\\58\\\\58\\isNull\\40\\int pos\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234183 "getColumnType"
	cpp_virtual public return_type class_ref 152519 // lbDBColumnTypes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_Query\\58\\\\58\\lbDBColumnTypes LB_STDCALL lbQuery\\58\\\\58\\getColumnType\\40\\int pos\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234311 "getColumnType"
	cpp_virtual public return_type class_ref 152519 // lbDBColumnTypes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_Query\\58\\\\58\\lbDBColumnTypes LB_STDCALL lbQuery\\58\\\\58\\getColumnType\\40\\char\\42\\ name\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234439 "setReadonly"
	public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param in name "updateable" explicit_type "bool"
	    defaultvalue " true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\setReadonly\\40\\char\\42\\ column\\44\\ bool updateable\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234567 "getReadonly"
	public explicit_return_type "bool"
	nparams 1
	  param inout name "column" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...sbool LB_STDCALL lbQuery\\58\\\\58\\getReadonly\\40\\char\\42\\ column\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234695 "getPosition"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return cursor; };
"
	
	
	comment " Navigation "
      end

      operation 234823 "absolute"
	public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\absolute\\40\\int pos\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 234951 "first"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\first\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235079 "next"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\next\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235207 "previous"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\previous\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235335 "last"
	public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\last\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235463 "setWhereClause"
	public explicit_return_type "char"
	nparams 2
	  param in name "query" explicit_type "char"
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...schar\\42\\ LB_STDCALL lbQuery\\58\\\\58\\setWhereClause\\40\\const char\\42\\ query\\44\\ char\\42\\ where\\41\\:0:
/// \\todo Add support for joined tables.

${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235591 "addWhereClause"
	public explicit_return_type "char"
	nparams 2
	  param in name "query" explicit_type "char"
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
/// \\todo Implement adding where clauses to exsisting.

${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235719 "setAutoRefresh"
	public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235847 "reopen"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...svoid LB_STDCALL lbQuery\\58\\\\58\\reopen\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 235975 "getChar"
	cpp_virtual public explicit_return_type "char"
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236103 "getAsString"
	public return_type class_ref 141255 // lb_I_String
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236231 "getAsLong"
	public return_type class_ref 141639 // lb_I_Long
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236359 "setString"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "columnName" type class_ref 141255 // lb_I_String
	  param inout name "value" type class_ref 141255 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\setString\\40\\lb_I_String\\42\\ columnName\\44\\ lb_I_String\\42\\ value\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236487 "init"
	public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param in name "_henv" type class_ref 152903 // HENV
	  param in name "_hdbc" type class_ref 153031 // HDBC
	  param in name "readonly" explicit_type "int"
	    defaultvalue " 1"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\init\\40\\HENV _henv\\44\\ HDBC _hdbc\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236615 "executeDirect"
	public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "SQL" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbQuery\\58\\\\58\\executeDirect\\40\\char\\42\\ SQL\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 236743 "getCurrentStatement"
	cpp_inline public return_type class_ref 152775 // HSTMT
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
		return hstmt;
	};
"
	
	
	comment "*
	 * Get the statement for creation of bound columns in lb_I_ColumnBinding.
	 * This function is public in class level, not on interface level.
	 "
      end

      operation 236871 "isReadonly"
	cpp_inline public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
		return _readonly;
	};
"
	
	
      end

      operation 236999 "getBoundColumns"
	cpp_inline public return_type class_ref 131399 // lb_I_ColumnBinding
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
		return boundColumns.getPtr();
	};
"
	
	
      end

      attribute 153543 "cursor"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 153671 "peeking"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 153799 "haveData"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 144967 // henv (<directional aggregation by value>)
	relation 144967 *-->
	  a role_name "henv" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 144967 // henv (<directional aggregation by value>)
	  b parent class_ref 152903 // HENV
      end

      classrelation 145095 // hdbc (<directional aggregation by value>)
	relation 145095 *-->
	  a role_name "hdbc" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145095 // hdbc (<directional aggregation by value>)
	  b parent class_ref 153031 // HDBC
      end

      classrelation 145223 // hstmt (<directional aggregation by value>)
	relation 145223 *-->
	  a role_name "hstmt" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145223 // hstmt (<directional aggregation by value>)
	  b parent class_ref 152775 // HSTMT
      end

      classrelation 145351 // hupdatestmt (<directional aggregation by value>)
	relation 145351 *-->
	  a role_name "hupdatestmt" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145351 // hupdatestmt (<directional aggregation by value>)
	  b parent class_ref 152775 // HSTMT
      end

      classrelation 145479 // retcode (<directional aggregation by value>)
	relation 145479 *-->
	  a role_name "retcode" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145479 // retcode (<directional aggregation by value>)
	  b parent class_ref 153159 // RETCODE
      end

      attribute 153927 "szSql"
	private explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}[1000]${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 154055 "databound"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 154183 "firstfetched"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 154311 "_readonly"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
	comment " readonly = 1, else = 0"
      end

      attribute 154439 "_autoRefresh"
	private explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 154567 "mode"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
	comment " insert = 1, select = 0"
      end

      attribute 154695 "skipFKCollections"
	class_attribute private explicit_type "int"
	init_value "= 0"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 154823 "preparingFKColumns"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 145607 // cols (<directional aggregation by value>)
	relation 145607 *-->
	  a role_name "cols" multiplicity "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145607 // cols (<directional aggregation by value>)
	  b parent class_ref 131911 // SQLSMALLINT
      end

      attribute 154951 "count"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 155079 "fetchstatus"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end
    end

    class 153287 "lbBoundColumn"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass def lbBoundColumn:0:"
      classrelation 145735 // <generalisation>
	relation 145735 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 145735 // <generalisation>
	  b parent class_ref 152263 // lb_I_BoundColumn
      end

      operation 237127 "lbBoundColumn"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {
		ref = STARTREF;
		bound = 0;
		cbBufferLength = 0;
		buffer = NULL;
		//colName = NULL;
		ColumnSize = 0;
		rows = 2;
		isReadonly = true;
		columnName = NULL;
	};
"
	
	
      end

      operation 237255 "~lbBoundColumn"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {
		if (columnName != NULL) {
			_CL_VERBOSE << \"~lbBoundColumn('\" << columnName << \"') called.\" LOG_
			free(columnName);
		} else {
			_CL_VERBOSE << \"~lbBoundColumn(?) called.\" LOG_
		}
		
		switch (_DataType) {
			case SQL_CHAR:
			case SQL_VARCHAR:
			case SQL_LONGVARCHAR:
				break;
			case SQL_INTEGER:
				break;
			case SQL_BIT:
				break;
			default:
				_CL_VERBOSE << \"lbBoundColumn::~lbBoundColumn() failed: Unknown or not supported datatype for column '\" << columnName << \"'\" LOG_
				break;
		}
		
		if ((bound != 0) && (buffer != NULL)) {
			free(buffer);
			buffer = NULL;
		}
	};
"
	
	
      end

      operation 237383 "lbBoundColumn"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "_ref" type class_ref 153287 // lbBoundColumn
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} {
		printf(\"lbBoundColumn(const lbBoundColumn& _ref) called\\n\");
	};
"
	
	
      end

      operation 237511 "operator ="
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "_ref" type class_ref 153287 // lbBoundColumn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} {
		printf(\"void operator=(const lbBoundColumn& _ref) called\\n\");
	};
"
	
	
      end

      operation 237639 "getType"
	cpp_virtual public return_type class_ref 152519 // lbDBColumnTypes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...slb_I_Query\\58\\\\58\\lbDBColumnTypes LB_STDCALL lbBoundColumn\\58\\\\58\\getType\\40\\\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 237767 "getData"
	cpp_virtual public return_type class_ref 141767 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slb_I_Unknown\\42\\ LB_STDCALL lbBoundColumn\\58\\\\58\\getData\\40\\\\41\\:0:

${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 237895 "getAsString"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "result" type class_ref 141255 // lb_I_String
	  param in name "asParameter" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...slbErrCodes LB_STDCALL lbBoundColumn\\58\\\\58\\getAsString\\40\\lb_I_String\\42\\ result\\44\\ int asParameter\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238023 "getAsLong"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "result" type class_ref 141639 // lb_I_Long
	  param in name "asParameter" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238151 "setFromString"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "set" type class_ref 141255 // lb_I_String
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238279 "setFromLong"
	cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "set" type class_ref 141639 // lb_I_Long
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238407 "checkReadonly"
	public explicit_return_type "void"
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238535 "setReadonly"
	public explicit_return_type "void"
	nparams 1
	  param in name "updateable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238663 "getReadonly"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return isReadonly; };
"
	
	
      end

      operation 238791 "getColumnName"
	public return_type class_ref 141255 // lb_I_String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 238919 "prepareBoundColumn"
	public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" type class_ref 152391 // lb_I_Query
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 239047 "bindColumn"
	public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "q" type class_ref 152391 // lb_I_Query
	  param in name "column" explicit_type "int"
	  param in name "ro" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 239175 "unbindReadonlyColumns"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 239303 "rebindReadonlyColumns"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 239431 "rebind"
	public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
      end

      operation 239559 "getColumnName_c_str"
	cpp_inline protected explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return columnName; };
"
	
	
      end

      operation 239687 "setData"
	cpp_virtual cpp_inline protected return_type class_ref 128711 // lbErrCodes
	nparams 4
	  param in name "b" explicit_type "int"
	  param in name "dt" type class_ref 131911 // SQLSMALLINT
	  param inout name "bu" explicit_type "void"
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${volatile}${throw}${abstract} {
		bound = b;
		_DataType = dt;
		buffer = bu;
		
		if (name == NULL) {
			_LOG << \"ERROR: Cloning data with NULL pointer\" LOG_
		}

		setColumn(name);

		return ERR_NONE;
	};
"
	
	
      end

      operation 239815 "leaveOwnership"
	cpp_virtual protected return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "oldOwner" type class_ref 152263 // lb_I_BoundColumn
	  param inout name "newOwner" type class_ref 152263 // lb_I_BoundColumn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//...e
//...slbErrCodes LB_STDCALL lbBoundColumn\\58\\\\58\\leaveOwnership\\40\\lb_I_BoundColumn\\42\\ oldOwner\\44\\ lb_I_BoundColumn\\42\\ newOwner\\41\\:0:

${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment " I call my self to leave my ownership"
      end

      operation 239943 "setColumn"
	cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 1
	  param inout name "col" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract} {
		if (columnName != NULL) free(columnName);
		
		columnName = (char*) malloc(strlen(col)+1);
		columnName[0] = 0;
		strcpy(columnName, col);
	};
"
	
	
      end

      attribute 155207 "columnName"
	protected explicit_type "char"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 155335 "bound"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 155463 "isReadonly"
	protected explicit_type "bool"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 145863 // _DataType (<directional aggregation by value>)
	relation 145863 *-->
	  a role_name "_DataType" multiplicity "" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 145863 // _DataType (<directional aggregation by value>)
	  b parent class_ref 131911 // SQLSMALLINT
      end

      attribute 155591 "_column"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 155719 "buffer"
	protected explicit_type "void"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      attribute 155847 "buffersize"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 145991 // query (<unidirectional association>)
	relation 145991 --->
	  a role_name "query" multiplicity "" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 145991 // query (<unidirectional association>)
	  b parent class_ref 152647 // lbQuery
      end

      attribute 155975 "cbBufferLength"
	protected explicit_type "long"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 146119 // ColumnSize (<directional aggregation by value>)
	relation 146119 *-->
	  a role_name "ColumnSize" multiplicity "" protected
	    comment "new (long);"
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 146119 // ColumnSize (<directional aggregation by value>)
	  b parent class_ref 153415 // SQLUINTEGER
      end

      attribute 156103 "rows"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	idl_decl ""
      end

      classrelation 146247 // hstmt (<directional aggregation by value>)
	relation 146247 *-->
	  a role_name "hstmt" multiplicity "" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 146247 // hstmt (<directional aggregation by value>)
	  b parent class_ref 152775 // HSTMT
      end
    end
  end

  deploymentview 128583 "lbDB"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 138055 "lbFakeDelete"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 144711 // lbFakeDelete
      end
    end

    artifact 141127 "lbDBView"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 151879 // lbDBView
      end
    end

    artifact 141255 "lbBoundColumns"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 152135 // lbBoundColumns
      end
    end

    artifact 141383 "lbQuery"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 152647 // lbQuery
      end
    end

    artifact 141511 "lbBoundColumn"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 153287 // lbBoundColumn
      end
    end
  end
end
