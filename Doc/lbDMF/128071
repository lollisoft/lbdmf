format 22
"interfaces" // interfaces
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default show_full_members_definition default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default drawing_language default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default
  draw_component_as_icon default show_component_req_prov default show_component_rea default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default
  show_activities default region_horizontally default drawing_language default
  
  classview 128071 "interfaces"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default show_full_members_definition default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default
    //col diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default
    //seq diagram settings
    show_full_operations_definition default write_horizontally default drawing_language default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default
    show_activities default region_horizontally default drawing_language default
    //class settings
    class 128071 "lb_I_KeyBase"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_KeyBase:0:
*
 * \\brief Interface for any class, that could be stored in lb_I_Container.
 *
 * Implement this interface to let your classes containable.
 "
      classrelation 128071 // <generalisation>
	relation 128071 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128071 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 128071 "lb_I_KeyBase"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 128199 "~lb_I_KeyBase"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 128327 "operator =="
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 128455 "operator >"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 128583 "operator <"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 128711 "equals"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 128839 "greater"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 128967 "lessthan"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 129095 "getKeyType"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Returns the type of this key.
	 "
      end

      operation 129223 "charrep"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Char representation of the key.
	 "
      end
    end

    class 128199 "lb_I_Unknown"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_Unknown:0:
*
 * \\brief Similar to IUnknown aka Microsoft COM.
 *
 * lb_I_Unknown is the base class for all other classes, that are used in the framework.
 * All classes, that needs to be loaded dynamically, must inherid from this class.
 "
      operation 185543 "operator ="
	private return_type class_ref 128199 // lb_I_Unknown
	nparams 1
	  param in name "rhs" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
${body}}
"
	
	
	comment "*
	 * Hide this operator to prevent usage. Effect ??
	 *
	 * Under MSVC 6.0 I get lots of warnings that there could not be created an assignement operator.
	 
	lb_I_Unknown& operator=(const lb_I_Unknown& rhs);
*
	 * Hide this operator to prevent usage. Effect ??
	 "
      end

      operation 185671 "release"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Call this, when you no longer use an instance of any classes, that have
	 * this as a base class.
	 *
	 * This decrements the internal reference counter and if zero, it destroys
	 * it self. The pointer, you have in use, is undefined afterwards. You should set
	 * it to NULL.
	 "
      end

      operation 185799 "getCreationLoc"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This function returns it's location of creation. The creation of this instance
	 * would be set with setModuleManager.
	 "
      end

      operation 185927 "deleteState"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Indicator, to determine, if the instance has no more references.
	 * The instance would be deleted at next release.
	 "
      end

      operation 186055 "setDebug"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Activate or deactivate debug informations.
	 "
      end

      operation 186183 "getRefCount"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Returns the number of references to this instance.
	 "
      end

      operation 186311 "getClassName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Returns the classname of this instance. It should be a hint to determine
	 * the real type of this instance. This is not a way to determine the interface
	 * of this class. The class in use can provide more than one interface to be used.
	 *
	 * It is not clear, how to implement that.
	 "
      end

      operation 186439 "setModuleManager"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param inout name "m" type class_ref 129607 // lb_I_Module
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Set the module manager. This is the - so called - object hook to get new
	 * instances of any kint of interface.
	 "
      end

      operation 186567 "getModuleManager"
	abstract cpp_virtual public return_type class_ref 129607 // lb_I_Module
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This returns the module manager, if you like to use it. It may not be set up
	 * in this instance. Better use the global function getModuleInstance().
	 "
      end

      operation 186695 "queryInterface"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 4
	  param inout name "name" explicit_type "char"
	  param inout name "unknown" explicit_type "void"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Query this instance for any interfaces it may support. A real implementation, derived
	 * from this, has a supported interface.
	 *
	 * There is a list interface functionality missing. I do not know, how to implement
	 * this in the macros.
	 *
	 * An idea may be a dummy call to it at any point after instantiation and include code
	 * to register all defined interfaces one per livetime.
	 "
      end

      operation 186823 "_queryInterface"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 4
	  param inout name "name" explicit_type "char"
	  param inout name "unknown" explicit_type "void"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}, ${t1} * * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This is an attempt to resolve any dangling references. As yet tried, a release on another
	 * place don't help, because the reference ID would include the place of creation.
	 *
	 * (__FILE__, __LINE__)
	 *
	 * With the help of UAP, it may be possible, because it can hold such an ID for each reference.
	 "
      end

      operation 186951 "clone"
	abstract const cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 2
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * This was used yet for put an object in a container. After inserting the object
         * into the container, there are two instances (not two references).
         * So the cloning is generaly a good way to make copies of an object.
         *
         * But remark:	The cloned object returned is not the instance in general.
         *		It is the *FIRST* lb_I_Unknown* reference to it.
         *		Putting an object in a container, you have your instance
         *		with the same reference count as before.
         *		
         *		The clone() method does not and is not able to make deep clones.
         *		It does not know how !
         *
         *		It creates a new instance with the normal constructor. But it calls
         *		the method setData with the this pointer.
         *		You must provide this method to be able to make a copy of your data.
		 *
         *
         *		return uk;
         "
      end

      operation 187079 "setData"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "u" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * This member must be implemented by the programmer of each class. setData is called
         * from the clone member to get a correct copy of the cloned instance.
         "
      end

      operation 187207 "accept"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "v" type class_ref 134343 // lb_I_Aspect
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 128327 "ObjectTyp"
       stereotype "enum"
      
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e

        Must have a type information of the key, because a string could not be compared
        with an integer (directly). For a key, it is simply one type of interface, that
        will be returned as their type information.
        
        Here, for keys, a key can be compared with another key of the same type. It is
        simple to implement the compare function, having the type of the object.
        
        Where to define the type information function ?
        
        I tent to use a type check in the lb_I_KeyBase interface. So it is not neccesary
        to implement a typecheck for each equals/greater function.

...sclass lb_I_Object:0:
...sdefinition of object types may cange:0:"
      attribute 128071 "LB_OBJECT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128199 "LB_STRING"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128327 "LB_STRINGLIST"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128455 "LB_GUIOBJECT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128583 "LB_WXGUIOBJECT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128711 "LB_DATA_TRANSFER_OBJECT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128839 "LB_CONNECTION"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 128967 "LB_APPBUSCLIENT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 129095 "LB_APPCLIENT_DISPATCH_FN"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 129223 "LB_APPSERVER_DISPATCH_PROTO"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 129351 "LB_EVENT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 129479 "LB_DOM_NODE"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 129607 "LB_DOM_ATTRIBUTE"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end
    end

    class 128455 "lb_I_Object"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Object:0:
*
 * \\brief Olt base class now declared as interface.
 * \\deprecated use lb_I_Unknown.
 "
      operation 129351 "lb_I_Object"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 129479 "lb_I_Object"
	cpp_inline protected explicit_return_type ""
	nparams 1
	  param in name "o" type class_ref 128455 // lb_I_Object
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} {
                //setName(o.getName());
        };
"
	
	
      end

      operation 129607 "~lb_I_Object"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 129735 "getType"
	abstract const cpp_virtual public return_type class_ref 128327 // ObjectTyp
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 129863 "setName"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "d" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 129991 "getName"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 130119 "setType"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 128583 "lb_I_String"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment " Keyable interfaces
...sclass lb_I_String:0:
*
 * \\brief A basic string class.
 *
 * This is a set of base interfaces that are compatible to the lb_I_Container interface.
 "
      classrelation 128199 // <generalisation>
	relation 128199 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128199 // <generalisation>
	  b parent class_ref 128071 // lb_I_KeyBase
      end

      operation 130247 "lb_I_String"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 130375 "~lb_I_String"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 130503 "trim"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Trim trailing spaces.
	 *
	 * Removes the trailing spaces in the string.
	 "
      end

      operation 130631 "toLower"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set all characters to lower. 
	 *
	 "
      end

      operation 130759 "stristr"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 2
	  param in name "String" explicit_type "char"
	  param in name "Pattern" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get case insensitive substr.
	 *
	 "
      end

      operation 130887 "setData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "p" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set the string data from char*
         * 
         * \\param p Input char const * data .
         "
      end

      operation 131015 "getData"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Return char* representation.
         *
         * \\return char* value.
         "
      end

      operation 131143 "setData"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set data from other lb_I_String instance.
         *
         * This member is used in lb_I_Container implementation via clone.
         "
      end

      operation 131271 "operator +="
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "toAppend" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Adds the given char* array.
		 *
		 "
      end

      operation 131399 "operator ="
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "toAppend" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 131527 "operator +="
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "toAppend" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 131655 "operator ="
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "toAppend" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 128839 "lb_I_Integer"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Integer:0:
*
 * \\brief A basic integer class.
 *
 * This is a set of base interfaces that are compatible to the lb_I_Container interface.
 "
      classrelation 128327 // <generalisation>
	relation 128327 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128327 // <generalisation>
	  b parent class_ref 128071 // lb_I_KeyBase
      end

      operation 131783 "lb_I_Integer"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 131911 "~lb_I_Integer"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 132039 "setData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* 
	 * \\brief Set p as the int value.
	 *
	 * \\param p Integer value to be set.
	 "
      end

      operation 132167 "getData"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Get the integer value.
         "
      end

      operation 132295 "setData"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set data from other lb_I_Integer instance.
         *
         * This member is used in lb_I_Container implementation via clone.
         "
      end
    end

    class 128967 "lb_I_Boolean"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Boolean:0:
*
 * \\brief A basic boolean class.
 *
 * This is a set of base interfaces that are compatible to the lb_I_Container interface.
 "
      classrelation 128455 // <generalisation>
	relation 128455 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128455 // <generalisation>
	  b parent class_ref 128071 // lb_I_KeyBase
      end

      operation 132423 "lb_I_Boolean"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 132551 "~lb_I_Boolean"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 132679 "setData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "p" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* 
	 * \\brief Set p as the int value.
	 *
	 * \\param p Boolean value to be set.
	 "
      end

      operation 132807 "getData"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Get the integer value.
         "
      end

      operation 132935 "setData"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set data from other lb_I_Boolean instance.
         *
         * This member is used in lb_I_Container implementation via clone.
         "
      end
    end

    class 129095 "lb_I_Long"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Long:0:
*
 * \\brief A basic long class.
 *
 * This is a set of base interfaces that are compatible to the lb_I_Container interface.
 "
      classrelation 128583 // <generalisation>
	relation 128583 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128583 // <generalisation>
	  b parent class_ref 128071 // lb_I_KeyBase
      end

      operation 133063 "lb_I_Long"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 133191 "~lb_I_Long"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 133319 "setData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "p" explicit_type "long"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 133447 "getData"
	abstract const cpp_virtual public explicit_return_type "long"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 133575 "setData"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 129223 "lb_I_Parameter"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Parameter:0:
*
 * \\brief A parameter interface. Set of parameter - value pairs.
 *
 * This interface is used in build up dynamic commands to be issued to
 * event handlers (lb_I_EventHandler, lb_I_EvHandler).
 "
      classrelation 128711 // <generalisation>
	relation 128711 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128711 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 133703 "lb_I_Parameter"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 133831 "~lb_I_Parameter"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 133959 "setInt"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" explicit_type "char"
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * Integer parameter
         "
      end

      operation 134087 "getInt"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "parameter" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 134215 "setChar"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" explicit_type "char"
	  param in name "p" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * char* parameter
         "
      end

      operation 134343 "getChar"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "parameter" explicit_type "char"
	  param inout name "buffer" explicit_type "char"
	  param in name "length" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * * ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 134471 "setString"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * Hopefully the better variant for char arrays.
         "
      end

      operation 134599 "getString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 134727 "setUAPString"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set a String as a parameter.
         *
         * \\param parameter This is the name of the parameter.
         * \\param p         This is the value for the given name.
         "
      end

      operation 134855 "getUAPString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Get a String as a parameter.
         *
         * \\param parameter This is the name of the parameter.
         * \\param p         This is the value for the given name.
         *
         * Here is a sample how to implement an event handler for creating a menu entry,
         * wich in turn routes the event ID to the general OnDispatch member of a wxFrame:
         *
         * \\code
		_LOG << \"MyApp::lbEvHandler3 called\" LOG_
		lbErrCodes err = ERR_NONE;

		UAP_REQUEST(manager.getPtr(), lb_I_EventManager, ev_manager)
		UAP_REQUEST(manager.getPtr(), lb_I_String, parameter)
		UAP_REQUEST(manager.getPtr(), lb_I_String, menubar)
		UAP_REQUEST(manager.getPtr(), lb_I_String, menuname)
		UAP_REQUEST(manager.getPtr(), lb_I_String, handlername)
	
		UAP(lb_I_Parameter, param)

		QI(uk, lb_I_Parameter, param)

		parameter->setData(\"menubar\");
		param->getUAPString(*&parameter, *&menubar);
	
		parameter->setData(\"menuname\");
		param->getUAPString(*&parameter, *&menuname);
	
		parameter->setData(\"handlername\");
		param->getUAPString(*&parameter, *&handlername);
	
		int EvNr = 0;
		ev_manager->resolveEvent(handlername->getData(), EvNr);

		wxMenuBar* mbar = frame_peer->getMenuBar();
		wxMenu* menu = mbar->GetMenu(mbar->FindMenu(wxString(menubar->getData())));

		menu->Append(EvNr, menuname->getData());

		((wxFrame*) frame_peer)->Connect( EvNr,  -1, wxEVT_COMMAND_MENU_SELECTED,
	          (wxObjectEventFunction) (wxEventFunction) (wxCommandEventFunction)
	          &lb_wxFrame::OnDispatch );
         * \\endcode
         "
      end

      operation 134983 "setUAPInteger"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128839 // lb_I_Integer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135111 "getUAPInteger"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128839 // lb_I_Integer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135239 "setUAPBoolean"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128967 // lb_I_Boolean
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135367 "getUAPBoolean"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 128967 // lb_I_Boolean
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135495 "setUAPContainer"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135623 "getUAPContainer"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135751 "setUAPParameter"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129223 // lb_I_Parameter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 135879 "getUAPParameter"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129223 // lb_I_Parameter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 136007 "setUAPLong"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129095 // lb_I_Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 136135 "getUAPLong"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "parameter" type class_ref 128583 // lb_I_String
	  param inout name "p" type class_ref 129095 // lb_I_Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 136263 "Count"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * /brief Returns the number of parameters
	 *
	 "
      end

      operation 136391 "getParameterList"
	abstract cpp_virtual public return_type class_ref 129351 // lb_I_Container
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the list of parameters as a container.
	 *
	 "
      end
    end

    class 129351 "lb_I_Container"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Container:0:
* \\brief Storage for other objects.
 *
 * A container can store other objects. It is filled while making a copy of
 * the object to be inserted! 
 *
 * Note: The documention is not complete!
 "
      classrelation 128967 // <generalisation>
	relation 128967 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128967 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 138183 "Count"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Number of objects in the container.
	 *
	 "
      end

      operation 138311 "insert"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "e" type class_ref 128199 // lb_I_Unknown
	  param inout name "key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * const ${p0}, ${t1} * * const ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Insert an object.
	 * 
	 * Creates a copy of the given object and holds it in the container.
	 * To identify it, it is passed in conjunction with a key object.
	 *
	 * The key may be a lb_I_KeyBase instance.
	 "
      end

      operation 138439 "remove"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * const ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Remove by given key.
	 *
	 * Remove an object having the given key. It may be that there are multible objects
	 * with that key. Remove affects only one of them. Not sure, if this is really so.
	 "
      end

      operation 138567 "exists"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "e" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * const ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Existence check for an object by key.
	 *
	 * Checks, if an object with the given key is in the container.
	 "
      end

      operation 138695 "hasMoreElements"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Returns 1 if elements are iterable.
	 *
	 "
      end

      operation 138823 "nextElement"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get next element.
	 *
	 "
      end

      operation 138951 "finishIteration"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Stops the iteration modus, begun with hasMoreElements.
	 *
	 * Use this function to stop the iteration. You must use this function to
	 * be able to restart iteration. If hasMoreElements returns 0, the
	 * iteration is finished automatically.
	 "
      end

      operation 139079 "getElementAt"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get element at given position. Starts at 0.
	 "
      end

      operation 139207 "getKeyAt"
	abstract cpp_virtual public return_type class_ref 128071 // lb_I_KeyBase
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get key at given position. Starts at 0.
	 "
      end

      operation 139335 "getElement"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 1
	  param inout name "key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * * const ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
     * Direct access over key
     "
      end

      operation 139463 "setElement"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "key" type class_ref 128071 // lb_I_KeyBase
	  param inout name "e" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}, ${t1} * * const ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 139591 "deleteAll"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Delete all container entries.
	 *
	 * This deletes all entries of the container.
	 * 
	 * Note: In my wxWidgets sample application are stored database dialogs. These would be deleted
	 * by the destructor cleanup code. So they must be removed, not deleted.
	 *
	 * This is because of the special handling of open and hidden dialogs. 
	 "
      end

      operation 139719 "detachAll"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Elements would not deleted from container.
     *
     * Use this function to avoid cleanup through the container.
     "
      end

      operation 139847 "currentKey"
	abstract cpp_virtual public return_type class_ref 128071 // lb_I_KeyBase
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get current key based on iterator position.
	 *
	 "
      end
    end

    class 129479 "lb_I_Element"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Element:0:"
      classrelation 128839 // <generalisation>
	relation 128839 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 128839 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 136519 "lb_I_Element"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 136647 "~lb_I_Element"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 136775 "getNext"
	abstract const cpp_virtual public return_type class_ref 129479 // lb_I_Element
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 136903 "setNext"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "e" type class_ref 129479 // lb_I_Element
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 137031 "getObject"
	abstract const cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 137159 "equals"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "a" type class_ref 129479 // lb_I_Element
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * Do a full compare. Data and key must be equal.
         "
      end

      operation 137287 "equals"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * Do a key compare.
         "
      end

      operation 137415 "lessthan"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 137543 "detachData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 137671 "getKey"
	abstract const cpp_virtual public return_type class_ref 128071 // lb_I_KeyBase
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 137799 "operator =="
	const cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "a" type class_ref 129479 // lb_I_Element
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract} {
                return this->equals(a);
        };
"
	
	
      end

      operation 137927 "operator =="
	const cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract} {
                return this->equals(_key);
        };
"
	
	
      end

      operation 138055 "operator <"
	const cpp_inline public explicit_return_type "int"
	nparams 1
	  param in name "_key" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract} {
        	return this->lessthan(_key);
        };
"
	
	
      end
    end

    class 129607 "lb_I_Module"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...e
...sclass lb_I_Module:0:"
      classrelation 129095 // <generalisation>
	relation 129095 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129095 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      classrelation 129223 // <generalisation>
	relation 129223 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129223 // <generalisation>
	  b parent class_ref 129735 // lb_I_Requestable
      end

      operation 139975 "lb_I_Module"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 140103 "~lb_I_Module"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 140231 "getCreationLoc"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param inout name "addr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140359 "notify_create"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "that" type class_ref 128199 // lb_I_Unknown
	  param inout name "implName" explicit_type "char"
	  param inout name "file" explicit_type "char"
	    defaultvalue " \"\""
	  param in name "line" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140487 "notify_add"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "that" type class_ref 128199 // lb_I_Unknown
	  param inout name "implName" explicit_type "char"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140615 "notify_release"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "that" type class_ref 128199 // lb_I_Unknown
	  param inout name "implName" explicit_type "char"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140743 "notify_destroy"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "that" type class_ref 128199 // lb_I_Unknown
	  param inout name "implName" explicit_type "char"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140871 "can_delete"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 4
	  param inout name "that" type class_ref 128199 // lb_I_Unknown
	  param inout name "implName" explicit_type "char"
	  param inout name "file" explicit_type "char"
	    defaultvalue " \"\""
	  param in name "line" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 140999 "load"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * This function loads a module and stores the modulehandle in an array
         * or a list. If the object is destroyed, the loaded modules are
         * automatically unloaded (the array/list).
         "
      end

      operation 141127 "preload"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 141255 "printReferences"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "addr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 141383 "getFunctors"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "interfacename" explicit_type "char"
	  param inout name "node" type class_ref 129863 // lb_I_ConfigObject
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * & ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * The module manager is responsible for creating any instances, that are
         * available. This implementation knows that the directory of functors
         * for instances are stored in an XML file (DTD file v1.3).
         *
         * The current implementation for this in the function request is not the
         * intention for the interface lb_I_Requestable.
         *
         * The new function for this may be:
         
*
         * get back a lb_I_String for a functor or a lb_I_Container for a list of
         * them. The errcode helps to decide.
         "
      end

      operation 141511 "getInstance"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "functorname" explicit_type "char"
	  param inout name "node" type class_ref 129863 // lb_I_ConfigObject
	  param inout name "uk" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * & ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 141639 "getObjectInstance"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "inst" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         *
         
virtual lbErrCodes getObjectInstance(char* name, lb_I_Requestable*& inst) = 0; "
      end

      operation 141767 "makeInstance"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "functor" explicit_type "char"
	  param inout name "module" explicit_type "char"
	  param inout name "instance" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * * ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 141895 "getCreationLoc"
	abstract const cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 129863 "lb_I_ConfigObject"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sWrapper for some DOM interfaces:0:
...e
...sclass lb_I_ConfigObject:0:"
      classrelation 132807 // <generalisation>
	relation 132807 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132807 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 181831 "lb_I_ConfigObject"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "...sprotected ctor\\39\\s and dtor\\39\\s:0:"
      end

      operation 181959 "~lb_I_ConfigObject"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 182087 "getParam"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "value" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...sSimple access:8:
*
	 * Get the value for a parameter in the config object.
	 "
      end

      operation 182215 "findObject"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "object" type class_ref 129863 // lb_I_ConfigObject
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...sdoc:8:
*
	 * Access to objects from here
	 
...e
                            findNode "
      end

      operation 182343 "getParent"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "_parent" type class_ref 129863 // lb_I_ConfigObject
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sdoc:8:
*
	 * Which parent ?
	 * In a view of search result may be more than one parent available.
	 
...e"
      end

      operation 182471 "getChildrenCount"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sdoc:8:
*
	 * A config object may be only a view. So the internal childrens may
	 * not really reflect the structure of the xml file. This may only
	 * return if there is a result of found nodes with the search criteria.
	 *
	 * Sample: There may a search for all functors. So the result may be a
	 *         list of functors in that xml file. but the modules may be 
	 *         different.
	 
...e"
      end

      operation 182599 "getFirstChildren"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "children" type class_ref 129863 // lb_I_ConfigObject
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Simple list access functions"
      end

      operation 182727 "getNextChildren"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "children" type class_ref 129863 // lb_I_ConfigObject
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 182855 "getAttribute"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "attr" type class_ref 138055 // lb_I_Attribute
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sdoc:8:
*
	 * Sample: Get a node, that contains an attribute with the given
	 *         name and value. As a result, that node may be used to find
	 *         the modulename, containing that node - attribute.
	 *
	 * Call sample:
	 *         object->getRelativeNodeWithAttr(
	 *                 \"../FunctionName\",	// expected node
	 *                 \"Name\",		// expected attribute
	 *                 \"instanceOfLogger\",	// expected value
	 *                 relNode);
	 *
	 *         Finding an instance for an object:
	 *         The result may be a list of nodes, because there may be
	 *         more than one module, implementing an instance of that
	 *         name. 
	 
...e
...sbla:0:

	virtual lbErrCodes LB_STDCALL navigateToNodeWithAttr(
				const char* relNodeName, 
				const char* attrName,
				const char* attrVal,
				bool prefered = FALSE) = 0;

...e
*
	 * After the search for nodes like the sample above, this function
	 * navigates to a specific node in the document. That node must be
	 * available. With this function I can move to that node, containing
	 * the modulename - the real result.
	 
...sbla:0:
	 
	virtual lbErrCodes LB_STDCALL navigateToNode(const char* relName) = 0;

...e
*
	 * Properties from this object
	 "
      end

      operation 182983 "getAttributeValue"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param inout name "attr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 183111 "deleteValue"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "attr" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 183239 "getName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "	virtual lbErrCodes getDefaultImpl(char* interfacename, lb_I_ConfigObject* node, char*& implTor, char*& module) = 0;"
      end

      classrelation 132935 // <dependency>
	relation 132935 -_->
	  stereotype "friend"
	  a protected
	    cpp default "Generated"
	    classrelation_ref 132935 // <dependency>
	  b parent class_ref 138183 // lb_I_XMLConfig
      end
    end

    class 129991 "lb_I_Instance"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Instance:0:"
      classrelation 129351 // <generalisation>
	relation 129351 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129351 // <generalisation>
	  b parent class_ref 128071 // lb_I_KeyBase
      end

      operation 142023 "lb_I_Instance"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "...sprotected:0:"
      end

      operation 142151 "~lb_I_Instance"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 142279 "getAddress"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e"
      end

      operation 142407 "getInstanceClassname"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 142535 "getFile"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 142663 "getLine"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 142791 "setAddress"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "a" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 142919 "setClassname"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143047 "setFile"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "f" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143175 "setLine"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143303 "addReference"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param inout name "classname" explicit_type "char"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Build a string with classname + _ + file + _ + line as a key for the reference.
	 * If the release function is used directly, it shows me an unregistered reference,
	 * so I will find all non UAP pointers.
	 "
      end

      operation 143431 "delReference"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param inout name "classname" explicit_type "char"
	  param inout name "file" explicit_type "char"
	  param in name "line" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130119 "lb_I_InstanceReference"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_InstanceReference:0:"
      classrelation 129479 // <generalisation>
	relation 129479 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129479 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 143559 "getFile"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143687 "getLine"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143815 "getCount"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 143943 "setFile"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "f" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 144071 "setLine"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "l" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 144199 "setCount"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "c" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130247 "lb_I_Log"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Log:0:"
      classrelation 129607 // <generalisation>
	relation 129607 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129607 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 144327 "lb_I_Log"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "...sprotected:0:"
      end

      operation 144455 "~lb_I_Log"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 144583 "logdirect"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "msg" explicit_type "char"
	  param inout name "f" explicit_type "char"
	  param in name "level" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
 This order does not work with visual C++ !!??
    virtual void LB_STDCALL log(const char *msg, long line, char* file) = 0;"
      end

      operation 144711 "log"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 3
	  param in name "msg" explicit_type "char"
	  param in name "line" explicit_type "long"
	  param inout name "file" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} ${p1}, ${t2} * ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Take it here...    "
      end

      operation 144839 "log"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "log" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 144967 "enable"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145095 "disable"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145223 "event_begin"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "event" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145351 "event_end"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "event" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145479 "setPrefix"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "p" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145607 "operator <<"
	abstract cpp_virtual public return_type class_ref 130247 // lb_I_Log
	nparams 1
	  param in name "i" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145735 "operator <<"
	abstract cpp_virtual public return_type class_ref 130247 // lb_I_Log
	nparams 1
	  param in name "c" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 145863 "operator <<"
	abstract cpp_virtual public return_type class_ref 130247 // lb_I_Log
	nparams 1
	  param in name "string" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130375 "lb_I_Runnable"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129735 // <generalisation>
	relation 129735 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129735 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 145991 "lb_I_Runnable"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 146119 "~lb_I_Runnable"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 146247 "run"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130503 "lb_I_ZThread"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129863 // <generalisation>
	relation 129863 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129863 // <generalisation>
	  b parent class_ref 130375 // lb_I_Runnable
      end

      operation 146375 "lb_I_ZThread"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 146503 "~lb_I_ZThread"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 146631 "operator ->"
	abstract cpp_virtual public return_type class_ref 130503 // lb_I_ZThread
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 146759 "equals"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "t" type class_ref 130503 // lb_I_ZThread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 146887 "operator =="
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "t" type class_ref 130503 // lb_I_ZThread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147015 "kill"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147143 "join"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147271 "run"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "target" type class_ref 130375 // lb_I_Runnable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147399 "interrupt"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147527 "isInterrupted"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " The set/getPriority functions are not implemented yet"
      end

      operation 147655 "isKilled"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147783 "isDaemon"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 147911 "setDaemon"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param in name "flag" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 148039 "setNotify"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param in name "flag" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 148167 "wantNotify"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 148295 "sleep"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param in name "s" explicit_type "ulong"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 148423 "yield"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130631 "lb_I_Thread"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Thread:0:"
      classrelation 129991 // <generalisation>
	relation 129991 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 129991 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 148551 "lb_I_Thread"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 148679 "~lb_I_Thread"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 148807 "create"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 148935 "run"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 149063 "stop"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 149191 "pause"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 149319 "resume"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 149447 "lb_I_Thread"
	cpp_inline private explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 130631 // lb_I_Thread
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} {};
"
	
	
	comment " no copy ctor/assignment operator"
      end

      operation 149575 "operator ="
	cpp_inline private return_type class_ref 130631 // lb_I_Thread
	nparams 1
	  param in name "" type class_ref 130631 // lb_I_Thread
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${abstract} { return *this; };
"
	
	
      end
    end

    class 130759 "lb_I_Mutex"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Mutex:0:"
      operation 149703 "lb_I_Mutex"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 149831 "~lb_I_Mutex"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 149959 "createMutex"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 150087 "deleteMutex"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 150215 "enter"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 150343 "release"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 130887 "lb_I_CriticalSection"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_CriticalSection:0:"
      operation 150471 "lb_I_CriticalSection"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 150599 "~lb_I_CriticalSection"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 150727 "enter"
	abstract cpp_virtual protected return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 150855 "leave"
	abstract cpp_virtual protected return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      classrelation 130119 // <dependency>
	relation 130119 -_->
	  stereotype "friend"
	  a protected
	    cpp default "Generated"
	    classrelation_ref 130119 // <dependency>
	  b parent class_ref 131015 // lb_I_Lock
      end
    end

    class 131015 "lb_I_Lock"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Lock:0:"
      operation 150983 "lb_I_Lock"
	cpp_inline protected explicit_return_type ""
	nparams 2
	  param inout name "_cso" type class_ref 130887 // lb_I_CriticalSection
	  param inout name "_name" explicit_type "char"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} * & ${p0}, ${t1} * ${p1}${)}${volatile}${throw} {};
"
	
	
      end

      operation 151111 "~lb_I_Lock"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 151239 "lb_I_Lock"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 151367 "lb_I_Lock"
	cpp_inline protected explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 131015 // lb_I_Lock
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${)}${volatile}${throw} {};
"
	
	
      end
    end

    class 131143 "DLLEXPORT"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_Mutex:0:
...e"
    end

    class 131271 "lb_I_Query"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_Query:0:
*
 * \\brief A SQL Query interface.
 *
 * This is a basic interface to issue SQL queries. It should provide cursor functionality,
 * because it has first, next, previous and last for navigation in the result of a query.
 "
      classrelation 130247 // <generalisation>
	relation 130247 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130247 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 151495 "lb_I_Query"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 151623 "~lb_I_Query"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 151751 "setView"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "cb" type class_ref 131399 // lb_I_ColumnBinding
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Column binding mode.
	 * 
	 * Not clear how the view should get a bound columns instance.
	 "
      end

      operation 151879 "registerView"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "view" type class_ref 131527 // lb_I_MVC_View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...svirtual lbErrCodes LB_STDCALL \\40\\un\\41\\registerView\\40\\lb_I_MVC_View\\42\\ view\\41\\ \\61\\ 0\\59\\:8:
 MVC View mode 

	 * As a sample may be a graphical view for the result of the interpreted
	 * graphics and the textual view. The controller then might use one button
	 * for updating the model and the model then informs its views.
	 
*
	 * \\brief Register a view to this query instance.
	 *
	 * It is an attempt to enable active updates issued to the views, if other
	 * views have made them.
	 "
      end

      operation 152007 "unregisterView"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "view" type class_ref 131527 // lb_I_MVC_View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Unregister a view to this query instance.
	 *
	 * A view would be destroyed. Unregister it prior.
	 "
      end

      operation 152135 "PrintData"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "reverse" explicit_type "bool"
	    defaultvalue " false"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
* \\brief Print the resulting query data to the console. 
	 *
	 "
      end

      operation 152263 "PrintCurrent"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Print the current row data to the console. 
	 *
	 "
      end

      operation 152391 "PrintHeader"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Print out table header.
	 *
	 "
      end

      operation 152519 "PrintFooter"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Print out table footer.
	 *
	 "
      end

      operation 152647 "skipPeeking"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Skip look ahead if there are more rows.
	 *
	 * This deactivates extra look ahead if there are more rows in the
	 * cursor. The GUI sample need this to determine erly state for the
	 * navigation buttons.
	 "
      end

      operation 152775 "query"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" explicit_type "char"
	  param in name "bind" explicit_type "bool"
	    defaultvalue " true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set the SQL query.
         *
         * Set the SQL query string to be used.
         "
      end

      operation 152903 "bind"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Bind columns, if not yet have bound.
	 *
	 * This function should be used, if query would explicitly called to not
	 * bind the columns. This enables setup some readonly columns, that must
	 * bound differently.
	 "
      end

      operation 153031 "add"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Manipulation 
*
	 * \\brief Begin adding a row.
	 *
	 * Sets a flag, that the data should be positioned at the new row space.
	 * This also should set default values accordingly to the database in behind.
	 *
	 * All further data manipulation is done at this row.
	 *
	 * Any further navigation is skipped until the update function has been called.
	 "
      end

      operation 153159 "isAdding"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get adding mode.
	 *
	 * Returns 1 if adding is active or 0 if not.
	 "
      end

      operation 153287 "remove"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Deletes the current entry.
	 "
      end

      operation 153415 "update"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Updates the modified data or stores the new data added via add().
	 "
      end

      operation 153543 "getColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get column count.
	 "
      end

      operation 153671 "hasColumnName"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Check exsistence for column name.
	 *
	 * Returns false, if given column name is not in the query.
	 "
      end

      operation 153799 "getColumnName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param in name "col" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the name of a column.
	 *
	 * \\param col Integer index of the column.
	 "
      end

      operation 153927 "getTableName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param inout name "columnName" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the table name of the query.
	 *
	 * This is still buggy, if the query has joins.
	 "
      end

      operation 154055 "skipFKCollecting"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Skip foreign column informations.
	 *
	 * Disable the collection of foreign keys in an internal list.
	 "
      end

      operation 154183 "enableFKCollecting"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Enable foreign column informations.
	 *
	 * Enable the collection of foreign keys in an internal list.
	 "
      end

      operation 154311 "hasFKColumn"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Determines occurence of foreign column.
	 *
	 * Returns 1 if true. 0 if false.
	 "
      end

      operation 154439 "getFKColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Return number of foreign columns.
	 "
      end

      operation 154567 "getFKColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Return foreign column at pos.
	 "
      end

      operation 154695 "getFKColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 2
	  param inout name "table" explicit_type "char"
	  param inout name "primary" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the foreign key based on given primary table and primary key name.
	 "
      end

      operation 154823 "getPKTable"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get primary table name.
	 *
	 * Returns an lb_I_String instance of the primary table name from the given foreign column name.
	 * 
	 * Returns a NULL pointer, if no primary table name could be found.
	 "
      end

      operation 154951 "getPKColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "FKName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get primary column name.
	 *
	 * A foreign column points to another table's primary column.
	 "
      end

      operation 155079 "getPKColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the count of primary columns.
	 "
      end

      operation 155207 "getPKColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the primary column at given pos.
	 "
      end

      operation 155335 "isNull"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief NULL indicator for pos column.
	 "
      end

      class 131655 "lbDBColumnTypes"
	visibility public stereotype "enum"
	
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 129735 "lbDBColumnBit"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 129863 "lbDBColumnChar"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 129991 "lbDBColumnInteger"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 130119 "lbDBColumnBigInteger"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 130247 "lbDBColumnBinary"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 130375 "lbDBColumnDate"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 130503 "lbDBColumnFloat"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end

	attribute 130631 "lbDBColumnUnknown"
	  public explicit_type ""
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  idl_decl ""
	end
      end

      operation 155463 "getColumnType"
	abstract cpp_virtual public return_type class_ref 131655 // lbDBColumnTypes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Gets the type of the column.
	 *
	 "
      end

      operation 155591 "getColumnType"
	abstract cpp_virtual public return_type class_ref 131655 // lbDBColumnTypes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Gets the type of the column.
	 *
	 "
      end

      operation 155719 "setReadonly"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param in name "updateable" explicit_type "bool"
	    defaultvalue " true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set updateability of column.
	 *
	 * Set the column 'column' to be updateable or not.
	 "
      end

      operation 155847 "getReadonly"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "column" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get updateability of column.
	 *
	 * Get the updateability of column 'column'.
	 "
      end

      operation 155975 "getPosition"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Navigation 
* \\brief Get integer based position.
	 *
	 * The position is internally used to reposition the cursor to a prior
	 * position after the function reopen has recreated the statement.
	 *
	 * Currently remove makes use of reopen.
	 *
	 * First row starts with 1.
	 "
      end

      operation 156103 "absolute"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Position the cursor to an absolute position.
	 *
	 * First row starts with 1.
	 "
      end

      operation 156231 "first"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Move to first row.
	 *
	 * Sets the cursor position to the first of the result set.
	 "
      end

      operation 156359 "next"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Move to next row.
	 *
	 * Sets the cursor position to the next of the result set.
	 *
	 * Return:
	 *
	 *	WARN_DB_NODATA if only one more row will be present.
	 *	ERR_DB_NODATA if no more data is available.
	 "
      end

      operation 156487 "previous"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Move to previous row.
	 *
	 * Sets the cursor position to the previous of the result set.
	 "
      end

      operation 156615 "last"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Move to last row.
	 *
	 * Sets the cursor position to the last  of the result set.
	 "
      end

      operation 156743 "setWhereClause"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 2
	  param in name "query" explicit_type "char"
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Build new SQL query with where clause.
	 *
	 * This function copies the result into a new buffer. You have to free() it.
	 "
      end

      operation 156871 "addWhereClause"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 2
	  param in name "query" explicit_type "char"
	  param inout name "where" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}const ${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add to an existing where clause.
	 *
	 * This function copies the result into a new buffer. You have to free() it.
	 "
      end

      operation 156999 "setAutoRefresh"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "b" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set autorefresh on update.
		 *
		 "
      end

      operation 157127 "getChar"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column data as char*
	 "
      end

      operation 157255 "getAsString"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column data as lb_I_String* instance.
	 * 
	 * Builds a lb_I_String instance and fills in the data of the bound column.
	 "
      end

      operation 157383 "setString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "columnName" type class_ref 128583 // lb_I_String
	  param inout name "value" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set string to column.
         *
         * Modifies the column at the current row or sets the column for the new row data.
         *
         * \\param columnName Name of the column.
         * \\param value Value as a string.
         "
      end

      operation 157511 "getAsLong"
	abstract cpp_virtual public return_type class_ref 129095 // lb_I_Long
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
		 * \\brief Get the column data as lb_I_Integer* instance.
		 * 
		 * Builds a lb_I_Integer instance and fills in the data of the bound column.
		 * The database column must be of valit integer type. 
		 "
      end
    end

    class 131527 "lb_I_MVC_View"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_MVC_View:0:"
      classrelation 130503 // <generalisation>
	relation 130503 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130503 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 162503 "lb_I_MVC_View"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 162631 "~lb_I_MVC_View"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 162759 "updateView"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...svirtual lbErrCodes LB_STDCALL updateView\\40\\\\41\\ \\61\\ 0\\59\\:8:
------ MVC variant ------------
 Data is available, I can read it out ... "
      end

      operation 162887 "setViewSource"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "q" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...svirtual lbErrCodes LB_STDCALL setViewSource\\40\\lb_I_Unknown\\42\\ q\\41\\ \\61\\ 0\\59\\:8:
 The view source is the data, that should be displayed.
         * As this would be a database view, the function tries to get
         * a lb_I_Query source.
         "
      end
    end

    class 131783 "lb_I_BoundColumn"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_BoundColumn:0:
*
 * \\brief A single bound column, such as a text field on a form
 *
 * A bounf column contains one entity of a database column.
 "
      classrelation 130375 // <generalisation>
	relation 130375 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130375 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 157639 "lb_I_BoundColumn"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 157767 "~lb_I_BoundColumn"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
         * \\deprecated Pure abstract class has no ctor/dtor's
         "
      end

      operation 157895 "isNull"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Indicates NULL data in the column.
	 "
      end

      operation 158023 "getType"
	abstract cpp_virtual public return_type class_ref 131655 // lbDBColumnTypes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Type of the column.
	 "
      end

      operation 158151 "setReadonly"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "updateable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Set the column updateability.
	 "
      end

      operation 158279 "getReadonly"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column updateability.
	 "
      end

      operation 158407 "getData"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sdoc:8:
*
	 * \\brief Universal access to the column.
	 *
	 * This function creates an instance of an interface regarding to the
	 * underlying data type. For example:
	 * 
	 * DATETIME creates a lb_I_Datetime instance (to be implemented),
	 * CHAR(n)  creates a lb_I_String instance,
	 * VARCHAR  creates a lb_I_String instance
	 * and so on...
	 *
	 * The user of this class library knows about its datatypes for a query.
	 * Therefore he can expect that interfaces.
	 *
	 * If the application is an interacive query tool, then it should be the
	 * same. But it should additionally contain a general representation
	 * interface - like a lb_I_String.
	 *
	 * The setData is still defined in the base class - to be implemented here.
	 
...e"
      end

      operation 158535 "getAsString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "result" type class_ref 128583 // lb_I_String
	  param in name "asParameter" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the data formatted as string.
	 *
	 * \\param result Result must be an instance of lb_I_String to be filled.
	 * \\param asParameter Don't know why here a parameter should be possible.
	 "
      end

      operation 158663 "getAsLong"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "result" type class_ref 129095 // lb_I_Long
	  param in name "asParameter" explicit_type "int"
	    defaultvalue " 0"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get a long column.
	 *
	 * \\param result Result must be an instance of lb_I_Long to be filled.
	 * \\param asParameter Don't know why here a parameter should be possible.
	 "
      end

      operation 158791 "setFromString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "set" type class_ref 128583 // lb_I_String
	  param in name "mode" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Set the data from a string.
	 *
	 * This sets the column value to the content of string set.
	 *
	 * \\param set Set the value of this string into the column.
	 * \\param mode ??
	 "
      end

      operation 158919 "getColumnName"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column name.
	 "
      end

      operation 159047 "getColumnName_c_str"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 159175 "prepareBoundColumn"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" type class_ref 131271 // lb_I_Query
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Preparation for column binding.
	 *
	 * This should be protected and only visible to the lb_I_BoundColumns interface.
	 "
      end

      operation 159303 "bindColumn"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "q" type class_ref 131271 // lb_I_Query
	  param in name "column" explicit_type "int"
	  param in name "ro" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Finish binding of a column.
	 *
	 * Bind a column from the query to this instance.
	 *
	 * \\param q The query.
	 * \\param column The number of the column to bind.
	 "
      end

      operation 159431 "unbindReadonlyColumns"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 159559 "rebindReadonlyColumns"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 159687 "rebind"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Rebind column.
	 "
      end

      operation 159815 "leaveOwnership"
	abstract cpp_virtual protected return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "oldOwner" type class_ref 131783 // lb_I_BoundColumn
	  param inout name "newOwner" type class_ref 131783 // lb_I_BoundColumn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This function will be used in setData to take the ownership of the internal
	 * data to the given instance.
	 *
	 * This is needed to store the instance in a container. Due to the container's
	 * call of clone, the new instance in the container must have the same data, not
	 * a copy. In this case a bound column has an allocated memory area, that must not
	 * be copied. Instead the clone must get ownership of the cloned instance data.
	 *
	 * This means, the cloned memory pointer must be set to NULL and must not be deleted.
	 * The clone get's the pointer to the memory area.
	 "
      end

      operation 159943 "bindColumn"
	cpp_virtual protected return_type class_ref 128711 // lbErrCodes
	nparams 4
	  param in name "stmt" type class_ref 131911 // SQLSMALLINT
	  param in name "column" type class_ref 132039 // SQLCHAR
	  param in name "name" type class_ref 131911 // SQLSMALLINT
	  param in name "length" type class_ref 131911 // SQLSMALLINT
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
      end

      operation 160071 "getBoundColumns"
	abstract cpp_virtual public return_type class_ref 129351 // lb_I_Container
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Get bound columns. If the ColumnBinding instance does not
         * bind all colums of a query, it would provide dummies.
         
*
         * \\brief Get a list of bound columns.
         *
         * This is not implemented yet.
         "
      end

      operation 160199 "setBoundColumns"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "bc" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
         * \\brief Set a list of bound columns.
         *
         * This is not implemented yet.
         "
      end

      operation 160327 "getBoundColumn"
	abstract cpp_virtual public return_type class_ref 131783 // lb_I_BoundColumn
	nparams 1
	  param in name "column" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the bound column.
	 *
	 * \\param column Index of the column
	 "
      end

      operation 160455 "isNull"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief NULL indicator for pos column.
	 "
      end

      operation 160583 "unbindReadonlyColumns"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Unbind readonly columns.
	 "
      end

      operation 160711 "rebindReadonlyColumns"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Rebind readonly columns.
	 "
      end

      operation 160839 "rebind"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* 
	 * \\brief Rebind all columns.
	 "
      end

      operation 160967 "getColumnType"
	abstract cpp_virtual public return_type class_ref 131655 // lbDBColumnTypes
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the type of a column.
	 "
      end

      operation 161095 "getColumnType"
	abstract cpp_virtual public return_type class_ref 131655 // lbDBColumnTypes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the type of a column.
	 "
      end

      operation 161223 "getColumnIndex"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the index of the bound column.
	 "
      end

      operation 161351 "setReadonly"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param in name "updateable" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Set the column updateability.
	 "
      end

      operation 161479 "getReadonly"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "column" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column updateability.
	 "
      end

      operation 161607 "getColumnCount"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the amound of columns.
	 *
	 * This returns the currently bound columns based on the SQL query.
	 "
      end

      operation 161735 "getString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "instance" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column as string representation.
	 *
	 * Returns index column as a string.
	 *
	 * \\param column Index of the column.
	 * \\param instance String instance to be filled with the value.
	 "
      end

      operation 161863 "getLong"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "column" explicit_type "int"
	  param inout name "instance" type class_ref 129095 // lb_I_Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column as string representation.
	 *
	 * Returns index column as a string.
	 *
	 * \\param column Index of the column.
	 * \\param instance String instance to be filled with the value.
	 "
      end

      operation 161991 "getString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "instance" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the column as string representation.
	 *
	 * Returns index column as a string.
	 *
	 * \\param column Name of the column.
	 * \\param instance String instance to be filled with the value.
	 "
      end

      operation 162119 "setString"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "instance" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Set the column as string representation.
	 *
	 * Sets column as a string.
	 *
	 * \\param column Name of the column.
	 * \\param instance String instance with the value to be set.
	 "
      end

      operation 162247 "setQuery"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "q" type class_ref 131271 // lb_I_Query
	  param inout name "ReadonlyColumns" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 162375 "getMode"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Indicator, if the current column is an adding column.
	 *
	 * Returns 1 if adding mode is active. Otherwise it returns 0.
	 "
      end
    end

    class 132167 "lb_I_Connection"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...e
...sclass lb_I_Connection:0:
*
 * \\brief This is the storage for one connection per db name and user name.
 "
      classrelation 130631 // <generalisation>
	relation 130631 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130631 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 163015 "getDBName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the name of the db connection.
	 "
      end

      operation 163143 "getDBUser"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the user of the db connection.
	 "
      end
    end

    class 132295 "lb_I_Database"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_Database:0:
*
 * \\brief The main class for operating with databases.
 *
 * This interface is used as the main access interface for operating with
 * databases.
 "
      classrelation 130759 // <generalisation>
	relation 130759 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130759 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 163271 "lb_I_Database"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 163399 "~lb_I_Database"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	comment "*
	 * \\deprecated Pure abstract class has no ctor/dtor's
	 "
      end

      operation 163527 "init"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Initializion of the database backend.
	 "
      end

      operation 163655 "setUser"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "_user" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 163783 "setDB"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "_db" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 163911 "isConnected"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Determine connection status.
	 *
	 "
      end

      operation 164039 "connect"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 3
	  param inout name "DSN" explicit_type "char"
	  param inout name "user" explicit_type "char"
	  param inout name "passwd" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Connect to the database.
	 *
	 * This function connects to the database and in this first state of
	 * development makes the test against this database.
	 * For this test, you should have created an ODBC datasource to
	 * a postgreSQL database named trainres. User is dba, password is
	 * trainres and the table is as the following definition:
	 *
	 * \\param DSN Data source name - usually the name in the ODBC configuration.
	 * \\param user User to connect as.
	 * \\param passwd The passord. 
	 "
      end

      operation 164167 "connect"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "pass" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 164295 "getQuery"
	abstract cpp_virtual public return_type class_ref 131271 // lb_I_Query
	nparams 1
	  param in name "readonly" explicit_type "int"
	    defaultvalue " 1"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get a query instance.
	 *
	 * Creates a query instance and returns it. You get the ownership and must destroy it
	 * if no longer in use.
	 *
	 * \\param readonly Set 0 to have write access. Default is readonly.
	 "
      end
    end

    class 132423 "lb_I_DatabaseForm"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * \\brief An attempt for a database form interface.
 "
      classrelation 130887 // <generalisation>
	relation 130887 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 130887 // <generalisation>
	  b parent class_ref 132551 // lb_I_Form
      end

      operation 164423 "init"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "SQLString" explicit_type "char"
	  param inout name "DBName" explicit_type "char"
	  param inout name "DBUser" explicit_type "char"
	  param inout name "DBPass" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the query object.
	 *
	 * A database form needs a query object, from whom it should
	 * show the data.
	 "
      end

      operation 164551 "getQuery"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Get the used SQL query.
	 *
	 * This function is used to compare the in used query with the query, that should be used (from the database).
	 * Using this avoids additional usage of a container for it and enables recreation of a changed form at runtime.
	 "
      end

      operation 164679 "setFilter"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "filter" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set a filter for the form.
	 *
	 * Setup a filter to be used in the form. The filter must specify a typical where clause or
	 * a part of it. To reset the filter, you need a call to this function without a parameter.
	 *
	 * Sample to show only data for one customer: kdnummer = 100001
	 "
      end

      operation 164807 "getTableName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param inout name "columnName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the table name based on column name.
	 *
	 * Return the related table name, that contains the given column name.
	 "
      end

      operation 164935 "getPrimaryColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sMaster Detail form interface part:8:
* \\brief Get the number of master columns.
	 *
	 * Needed to access the column name.
	 "
      end

      operation 165063 "getForeignColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 1
	  param inout name "primaryTable" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the number of foreign columns related to given primary tables.
	 *
	 * Needed to access the column name.
	 "
      end

      operation 165191 "getPrimaryColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the primary column at position pos.
	 *
	 * Warning: You must cleanup.
	 "
      end

      operation 165319 "getForeignColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the foreign column at position pos.
	 *
	 * Warning: You must cleanup.
	 "
      end

      operation 165447 "isCharacterColumn"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Return if the control is of type char.
	 *
	 "
      end

      operation 165575 "getControlValue"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the value of a control.
	 *
	 "
      end

      operation 165703 "getControlValue"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the value of a control.
	 *
	 "
      end

      operation 165831 "getControls"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the number of controls.
	 *
	 * Return the number of controls in the form. This includes all
	 * controls.
	 "
      end

      operation 165959 "setMasterForm"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "master" type class_ref 132423 // lb_I_DatabaseForm
	  param inout name "params" type class_ref 129223 // lb_I_Parameter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set a master formular for this one.
	 *
	 * This let's you define a master form that, if the user select's another entry in the master form, the
	 * detail form -  eg. this one - would reopen the query based on the new master - detail relation ship.
	 * 
	 "
      end

      operation 166087 "setDetailForm"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "detail" type class_ref 132423 // lb_I_DatabaseForm
	  param inout name "params" type class_ref 129223 // lb_I_Parameter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 166215 "updateFromMaster"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Update the clientforms.
	 *
	 * This function would be called for all client forms, contained by a master form.
	 "
      end

      operation 166343 "updateFromDetail"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 166471 "ignoreForeignKeys"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "toTable" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Do not include foreign keys into the layout.
	 "
      end

      operation 166599 "getColumnName"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 132551 "lb_I_Form"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_Form:0:
*
 * \\brief Base for formulars.
 *
 * This class enables you to create formulars with any layout caractaristics.
 "
      classrelation 131399 // <generalisation>
	relation 131399 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131399 // <generalisation>
	  b parent class_ref 133063 // lb_I_Window
      end

      classrelation 131527 // <generalisation>
	relation 131527 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131527 // <generalisation>
	  b parent class_ref 133191 // lb_I_EventHandler
      end

      operation 169287 "setName"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "appention" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the name of the form
	 *
	 "
      end

      operation 169415 "addButton"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 6
	  param inout name "buttonText" explicit_type "char"
	  param inout name "evHandler" explicit_type "char"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}, ${t5} ${p5}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add a button
	 *
	 * Add a new button at the given position and size.
	 "
      end

      operation 169543 "addLabel"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 5
	  param inout name "text" explicit_type "char"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add a label
	 *
	 * Add a new label at the given position and size.
	 "
      end

      operation 169671 "addTextField"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 5
	  param inout name "name" explicit_type "char"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add a text field
	 *
	 * Add a new text field at the given position and size.
	 "
      end

      operation 169799 "addOwnerDrawn"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 5
	  param inout name "name" explicit_type "char"
	  param in name "x" explicit_type "int"
	  param in name "y" explicit_type "int"
	  param in name "w" explicit_type "int"
	  param in name "h" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} ${p3}, ${t4} ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add an ownerdrawn control
	 *
	 * Add a new ownerdrawn control at the given position and size.
	 *
	 * This aims to draw various symbols or drawings based on an interpreted language.
	 "
      end

      operation 169927 "show"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 170055 "destroy"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 132679 "lb_I_DatabaseReport"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...e
...sclass lb_I_DatabaseReport:0:
*
 * \\brief An attempt for a report based on database queries.
 *
 * Based on the wxReportWriter project from http://www.daily.de/RepWrt/,
 * this is an adaption to my framework.
 "
      classrelation 131015 // <generalisation>
	relation 131015 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131015 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 166727 "init"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 4
	  param inout name "SQLString" explicit_type "char"
	  param inout name "DBName" explicit_type "char"
	  param inout name "DBUser" explicit_type "char"
	  param inout name "DBPass" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the report data.
	 *
	 * A database report needs a query object, from whom it should
	 * report the data.
	 "
      end

      operation 166855 "addAndCondition"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add a where clause and condition.
	 *
	 * This function is used to preset where clause conditions. The name/value pair
	 * would be added to a list of 'ANDed' condition rules. 
	 "
      end

      operation 166983 "addOrCondition"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "column" explicit_type "char"
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Add a where clause or condition.
	 *
	 * This function is used to preset where clause conditions. The name/value pair
	 * would be added to a list of 'ORed' condition rules. 
	 "
      end

      operation 167111 "beginBracket"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Begin a bracket condition block.
	 *
	 * Use this function to set a list of conditions in a bracket.
	 "
      end

      operation 167239 "endBracket"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief End a bracket condition block.
	 *
	 * Use this function to end a list of conditions in a bracket.
	 "
      end

      operation 167367 "setFrame"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "_frame" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the parent window for the report.
	 *
	 "
      end

      operation 167495 "update"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Update the data for the report.
	 *
	 * The instance should reread the data from the data source.
	 *
	 * There may be different datasources. 
	 * 
	 * On the one hand, it would be a SQL query, given by the init function.
	 *
	 * On the other hand, it may be a row of a current result set. May be from
	 * a database form.
	 *
	 * Both may have sub reports, depending of it's configuration.
	 "
      end

      operation 167623 "show"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Show the preview of the report.
	 "
      end

      operation 167751 "destroy"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Destroy the preview of the report.
	 "
      end

      operation 167879 "print"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Print the report.
	 "
      end

      operation 168007 "setName"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "name" explicit_type "char"
	  param in name "appention" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Set the name for the report.
	 "
      end
    end

    class 132807 "lb_I_MasterDetailFormDefinition"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_MasterDetailFormDefinition:0:
*
 * \\brief Definition of a master to detail relation.
 "
      classrelation 131143 // <generalisation>
	relation 131143 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131143 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 168135 "setMasterForm"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "master" type class_ref 132423 // lb_I_DatabaseForm
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the master form.
	 *
	 * The master form will be needed to determine the primary key control that a master form should have in it's
	 * related tables, that are given in the 'SQLString' for the init function of the master form.
	 *
	 * This means, if the master has changed it's data in any way, it will inform it's detail forms about the change.
	 * In this case each detail form performs the following steps to update it's own data:
	 *
	 * 1)	Saves changed data.
	 * 2)	Get the data for each primary column, that stays in relation to the detail view.
	 * 3)	Rebuild the where clause.
	 * 4)	Unbinds all columns.
	 * 5)	Opens a new query.
	 "
      end

      operation 168263 "addMasterColumn"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "column" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Adds a new column as a master.
	 *
	 * This could be used multiple times. It depends on how many columns may relate to the detail.
	 "
      end

      operation 168391 "getMasterColumns"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the number of master columns.
	 *
	 * Needed to access the column name.
	 "
      end

      operation 168519 "getMasterColumn"
	abstract cpp_virtual public return_type class_ref 128583 // lb_I_String
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the column at position pos.
	 *
	 * Warning: You must cleanup.
	 "
      end

      operation 168647 "getMasterForm"
	abstract cpp_virtual public return_type class_ref 132423 // lb_I_DatabaseForm
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get the master form.
	 "
      end

      operation 168775 "setCharacterColumn"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "pos" explicit_type "int"
	  param in name "is" explicit_type "bool"
	    defaultvalue " true"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 168903 "isCharacterColumn"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param in name "pos" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 132935 "LB_PACKET_TYPE"
       stereotype "enum"
      
      cpp_decl "${comment}enum ${name} {
${items}
};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...senum LB_PACKET_TYPE:0:"
      attribute 130759 "PACKET_LB_INVALIDTYPE"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 130887 "PACKET_LB_INT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131015 "PACKET_LB_CHAR"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131143 "PACKET_LB_SHORT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131271 "PACKET_LB_LONG"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131399 "PACKET_LB_USHORT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131527 "PACKET_LB_ULONG"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131655 "PACKET_LB_VOID"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end

      attribute 131783 "PACKET_LB_OBJECT"
	public explicit_type ""
	cpp_decl "  ${name}${value},${comment}"
	java_decl ""
	idl_decl ""
      end
    end

    class 133063 "lb_I_Window"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "* \\brief Base class for all windows and controls.
 *
 * This is an attempt to have an universal base interface for all windows like it
 * is in wxWidgets and other frameworks.
 "
      classrelation 131271 // <generalisation>
	relation 131271 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131271 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 169031 "create"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "parentId" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 169159 "getId"
	abstract cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 133319 "lb_I_GUIApp"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e"
    end

    class 133447 "lb_I_GUI"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_GUI:0:
*
 * It seems, that this is the factory class for any GUI elements. It also knows about any instance.
 "
      classrelation 131655 // <generalisation>
	relation 131655 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131655 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 170183 "createFrame"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...sCreation functions:8:

	 * Creation functions
	 
*
	 * Let the GUI implementation create a frame.
	 "
      end

      operation 170311 "createMenu"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Let the GUI implementation create a menu.
	 "
      end

      operation 170439 "createMenuBar"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Let the GUI implementation create a menu bar.
	 "
      end

      operation 170567 "createMenuEntry"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Let the GUI implementation create a menu entry.
	 "
      end

      operation 170695 "createDBForm"
	abstract cpp_virtual public return_type class_ref 132423 // lb_I_DatabaseForm
	nparams 5
	  param inout name "formName" explicit_type "char"
	  param inout name "queryString" explicit_type "char"
	  param inout name "DBName" explicit_type "char"
	  param inout name "DBUser" explicit_type "char"
	  param inout name "DBPass" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}, ${t4} * ${p4}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This function creates a database dialog for the given query.
	 *
	 * \\param formName Is the name for the form.
	 * \\param queryString Is the SQL query whose data should be displayed for modification.
	 "
      end

      operation 170823 "registerDBForm"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "formName" explicit_type "char"
	  param inout name "form" type class_ref 132423 // lb_I_DatabaseForm
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Register a form.
	 *
	 * This function must be used to register a database form, that has not been created
	 * by an instance of this interface.
	 *
	 * It will be used in the master detail form implementations. 
	 "
      end

      operation 170951 "createLoginForm"
	abstract cpp_virtual public return_type class_ref 132551 // lb_I_Form
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 171079 "getFrame"
	abstract cpp_virtual public return_type class_ref 128199 // lb_I_Unknown
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...sGetter functions:8:
*
	 * Returns the main frame for the GUI application.
	 "
      end

      operation 171207 "deactivateMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...sMenu manipulation:8:
*
	 * Disable a menuentry at the current position.
	 * The position is reached by using gotoMenuEntry.
	 "
      end

      operation 171335 "activateMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Enable a menuentry at the current position.
	 * The position is reached by using gotoMenuEntry.
	 "
      end

      operation 171463 "gotoMenuRoot"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This enables the manipulation of any manin menu entries and the addition of
	 * main menus.
	 "
      end

      operation 171591 "gotoMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "entry" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Go to any menu entry, to manipulate at this position.
	 "
      end

      operation 171719 "insertMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "entry" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Insert a menu instance after the current position.
	 "
      end

      operation 171847 "addMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "entry" type class_ref 128199 // lb_I_Unknown
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Add an entry at the current position (insert before)
	 "
      end

      operation 171975 "addMenuBar"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
...sDocs:0:

 * This will fasten up the current sample. It is not really needed to use
 * parameter based dispatching, if the target GUI interface provides the desired
 * functionality.
 *
 * So here, the GUI interface should provide some primitives handling code in its
 * interface.
 * 
 * These are buttons, labels, textfields, menus and so on.
 *
 * The handling code should include creation, removement, hiding and so on.
 
...e
...sfunctions that had been implemented in metaapplication:0:
 The menubar is still present in the demo. At the
	   first time, a new menubar should not be used.
	
*
	 * Add a menu bar to the main menu with the given name.
	 "
      end

      operation 172103 "addMenu"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Add a menu behind the last.
	 "
      end

      operation 172231 "addMenuEntry"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 4
	  param inout name "in_menu" explicit_type "char"
	  param inout name "entry" explicit_type "char"
	  param inout name "evHandler" explicit_type "char"
	  param inout name "afterentry" explicit_type "char"
	    defaultvalue " NULL"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}, ${t2} * ${p2}, ${t3} * ${p3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Add a menu entry in the named menu after given entry,
	 * if provided. The handler must be registered.
	 * 
	 * 
	 * \\param  in_menu Which menu to add to (File/Edit/Help/...)
	 * \\param  entry The text for that entry
	 * \\param  evHandler The name of a registered event handler, that handle this
	 * \\param  afterentry Insert the entry after an exsisting entry
	 "
      end

      operation 172359 "msgBox"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "windowTitle" explicit_type "char"
	  param inout name "msg" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}, ${t1} * ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "...e
*
	 * Let the GUI server show a dialog box.
	 * This would be the simplest way to show informations to the user.
	 "
      end

      operation 172487 "setDispatcher"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "disp" type class_ref 133575 // lb_I_Dispatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * We do not implement a dispatcher here, but we need one.
	 "
      end

      operation 172615 "findDBForm"
	abstract cpp_virtual public return_type class_ref 132423 // lb_I_DatabaseForm
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Find any window.
	 *
	 * This function finds any window by their name.
	 "
      end

      operation 172743 "showForm"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * \\brief Show form with given name.
	 "
      end

      operation 172871 "setIcon"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Set the app's icon.
	 "
      end
    end

    class 133703 "lb_I_wxGUI"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_wxGUI:0:"
      classrelation 131783 // <generalisation>
	relation 131783 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131783 // <generalisation>
	  b parent class_ref 133447 // lb_I_GUI
      end
    end

    class 133831 "lb_I_Control"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
* \\brief Base class for a control.
 *
 "
      classrelation 131911 // <generalisation>
	relation 131911 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 131911 // <generalisation>
	  b parent class_ref 133063 // lb_I_Window
      end

      operation 172999 "init"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "parent" type class_ref 133063 // lb_I_Window
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Initialize the control.
	 *
	 * The control must know its parent window.
	 "
      end
    end

    class 133959 "lb_I_LogonPage"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 134087 "lb_I_AppSelectPage"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 134215 "lb_I_LogonHandler"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 134343 "lb_I_Aspect"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "* \\brief Visitor base for all my interfaces.
 *
 * Implement a new class for a new operation such as save/load to/from file.
 *
 "
      classrelation 132039 // <generalisation>
	relation 132039 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132039 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 173127 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134215 // lb_I_LogonHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " abstract interface for visitors 
 The lb_I_Streamable interface would possibly go impossible
virtual void LB_STDCALL visit(lb_I_Unknown*) { printf(\"Error: Catch all visitor called!\\n\"); }"
      end

      operation 173255 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 133959 // lb_I_LogonPage
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 173383 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134087 // lb_I_AppSelectPage
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " Conflict with the catchall. Don't use MI."
      end

      operation 173511 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 133319 // lb_I_GUIApp
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " As above"
      end

      operation 173639 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 133447 // lb_I_GUI
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment " This is the wxApp class !! ??"
      end

      operation 173767 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134471 // lb_I_Frame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 173895 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 128071 // lb_I_KeyBase
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174023 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 128583 // lb_I_String
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174151 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 128839 // lb_I_Integer
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174279 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 129095 // lb_I_Long
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174407 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 129351 // lb_I_Container
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174535 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 132295 // lb_I_Database
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174663 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 131399 // lb_I_ColumnBinding
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174791 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 131783 // lb_I_BoundColumn
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 174919 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 131271 // lb_I_Query
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175047 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 131527 // lb_I_MVC_View
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175175 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 132167 // lb_I_Connection
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175303 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134599 // lb_I_InterfaceRepository
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175431 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 129479 // lb_I_Element
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175559 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 129607 // lb_I_Module
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175687 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134727 // lb_I_FunctorEntity
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175815 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 130119 // lb_I_InstanceReference
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 175943 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134855 // lb_I_EventManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176071 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 134983 // lb_I_EventMapper
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176199 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135111 // lb_I_Application
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176327 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135239 // lb_I_MetaApplication
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176455 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135367 // lb_I_EvHandler
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176583 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 133575 // lb_I_Dispatcher
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176711 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135495 // lb_I_InputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176839 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135623 // lb_I_OutputStream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 176967 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135751 // lb_I_FileOperation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177095 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 135879 // lb_I_Locale
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177223 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 129223 // lb_I_Parameter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177351 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136007 // lb_I_Reference
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177479 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 130247 // lb_I_Log
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177607 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136135 // lb_I_Plugin
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177735 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136263 // lb_I_PluginImpl
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177863 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136391 // lb_I_PluginManager
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 177991 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136519 // lb_I_PluginModule
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178119 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136647 // lb_I_wxFrame
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178247 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 133063 // lb_I_Window
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178375 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136775 // lb_I_Action
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178503 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 132551 // lb_I_Form
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178631 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 132807 // lb_I_MasterDetailFormDefinition
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178759 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 136903 // lb_I_DelegatedAction
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 178887 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 132679 // lb_I_DatabaseReport
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 179015 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 137031 // lb_I_CodeGenerator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 179143 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 137159 // lb_I_Streamable
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 179271 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 137287 // lb_I_DatabaseOperation
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 179399 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 137415 // lb_I_UserAccounts
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 179527 "visit"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" type class_ref 137543 // lb_I_Applications
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 134599 "lb_I_InterfaceRepository"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_InterfaceRepository:0:"
      classrelation 133447 // <generalisation>
	relation 133447 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133447 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 185031 "lb_I_InterfaceRepository"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 185159 "~lb_I_InterfaceRepository"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 185287 "setCurrentSearchInterface"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "iface" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Set an actual search argument as interface to be searched. This resets the internal
	 * index over all interfaces to zero.
	 "
      end

      operation 185415 "getFirstEntity"
	abstract cpp_virtual public return_type class_ref 134727 // lb_I_FunctorEntity
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 134727 "lb_I_FunctorEntity"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_FunctorEntity:0:
*
 * This interface will replace the recent approach of getting functors from
 * interfaces. This is because I have produced a big memory leak. The best winn
 * be to build a new repository code base.
 "
      classrelation 133191 // <generalisation>
	relation 133191 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133191 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 184007 "lb_I_FunctorEntity"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 184135 "~lb_I_FunctorEntity"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 184263 "setFunctor"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "functor" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 184391 "setModule"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "module" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 184519 "setInterface"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "iface" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 184647 "getFunctor"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 184775 "getModule"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 184903 "getInterface"
	abstract cpp_virtual public explicit_return_type "char"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      classrelation 133319 // <dependency>
	relation 133319 -_->
	  stereotype "friend"
	  a protected
	    cpp default "Generated"
	    classrelation_ref 133319 // <dependency>
	  b parent class_ref 134599 // lb_I_InterfaceRepository
      end
    end

    class 135495 "lb_I_InputStream"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 135623 "lb_I_OutputStream"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 135751 "lb_I_FileOperation"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "virtual ~Aspect(){} 
* \\brief Base for any file operation.
 *
 * To be capable to operate on files, You need to open that file and close it.
 "
      classrelation 132167 // <generalisation>
	relation 132167 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132167 // <generalisation>
	  b parent class_ref 134343 // lb_I_Aspect
      end

      operation 179655 "lb_I_FileOperation"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 179783 "~lb_I_FileOperation"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 179911 "begin"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "file" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Start the operation.
	 *
	 * Starts a file operation by means of implementation. See lbInputStreanOpr or
	 * lbOutputStreamOpr. They internally use lbInputStream and lbOutputStream.
	 *
	 * If a file operation is not started by calling begin. It can not be used, or
	 * it should do nothing. 
	 *
	 * \\param file	Provide a filename to internally create a file based stream.
	 "
      end

      operation 180039 "begin"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "stream" type class_ref 137671 // lb_I_Stream
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Start the operation.
	 *
	 * Starts a file operation by means of implementation. See lbInputStreanOpr or
	 * lbOutputStreamOpr. They internally use lbInputStream and lbOutputStream.
	 *
	 * If a file operation is not started by calling begin. It can not be used, or
	 * it should do nothing. 
	 *
	 * \\param stream	Provide an exsisting stream. To be used for cascaded operations.
	 "
      end

      operation 180167 "end"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief End the operation.
	 *
	 * This closes the file and disables the operation.
	 "
      end

      operation 180295 "getStream"
	abstract cpp_virtual public return_type class_ref 137671 // lb_I_Stream
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Get access to stream.
	 *
	 * This allows storage handling for private data.
	 "
      end
    end

    class 136647 "lb_I_wxFrame"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "*
 * \\brief Peer interfaces to its wx companions.
 *
 * Don't know, if this is really good. The derived class must be predefined and therefore
 * The derived class name is predefined.
 *
 * If others like to write another GUI wrapper, say, with MFC, they need to name their
 * class to this predefined name.
 "
      classrelation 132423 // <generalisation>
	relation 132423 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132423 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      classrelation 132551 // <generalisation>
	relation 132551 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132551 // <generalisation>
	  b parent class_ref 137799 // lb_I_EventSink
      end

      operation 181063 "getPeer"
	abstract cpp_virtual public return_type class_ref 137927 // lb_wxFrame
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 137159 "lb_I_Streamable"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 137287 "lb_I_DatabaseOperation"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 132295 // <generalisation>
	relation 132295 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132295 // <generalisation>
	  b parent class_ref 134343 // lb_I_Aspect
      end

      operation 180423 "lb_I_DatabaseOperation"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 180551 "~lb_I_DatabaseOperation"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 180679 "begin"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 3
	  param in name "DBName" explicit_type "char"
	  param in name "DBUser" explicit_type "char"
	  param in name "DBPass" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, const ${t1} * ${p1}, const ${t2} * ${p2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Start the operation.
	 *
	 * Start the database operation with the given parameters.
	 "
      end

      operation 180807 "begin"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "_db" type class_ref 132295 // lb_I_Database
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief Start the operation.
	 *
	 * Start the database operation with the given database instance.
	 "
      end

      operation 180935 "end"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "* \\brief End the operation.
	 *
	 * This closes the file and disables the operation.
	 "
      end
    end

    class 137671 "lb_I_Stream"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 138055 "lb_I_Attribute"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...sclass lb_I_Attribute:0:"
      classrelation 132679 // <generalisation>
	relation 132679 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 132679 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 181191 "lb_I_Attribute"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 181319 "~lb_I_Attribute"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 181447 "getName"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "name" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 181575 "getValue"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "value" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 181703 "getType"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 1
	  param inout name "type" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * & ${p0}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end
    end

    class 138183 "lb_I_XMLConfig"
      abstract 
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...sclass lb_I_XMLConfig:0:"
      classrelation 133063 // <generalisation>
	relation 133063 ---|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133063 // <generalisation>
	  b parent class_ref 128199 // lb_I_Unknown
      end

      operation 183367 "lb_I_XMLConfig"
	cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 183495 "~lb_I_XMLConfig"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
      end

      operation 183623 "parse"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
      end

      operation 183751 "hasConfigObject"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param in name "cfgObjectName" explicit_type "char"
	  param inout name "count" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * Generic access to an xml config file. This should allow to ask
	 * for any parameter in the config file. In normal circumstances,
	 * a config object is a node (DOM_Node), but it may result also
	 * in a list of nodes. So a counter will also returned.
	 "
      end

      operation 183879 "getConfigObject"
	abstract cpp_virtual public return_type class_ref 128711 // lbErrCodes
	nparams 2
	  param inout name "cfgObj" type class_ref 129863 // lb_I_ConfigObject
	  param in name "cfgObjectName" explicit_type "char"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * * ${p0}, const ${t1} * const ${p1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	comment "*
	 * This returns an instancepointer to the config object. The pointer
	 * must not be deleted by client. Client must call release for that.
	 "
      end
    end

    class 138311 "byte"
       stereotype "typedef" explicit_base_type "unsigned short"
      
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 138439 "u_short"
       stereotype "typedef" explicit_base_type "unsigned short"
      
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 138567 "DWORD"
       stereotype "typedef" explicit_base_type "unsigned long"
      
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 138695 "LB_DATA"
       stereotype "typedef" explicit_base_type "unsigned short"
      
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 138823 "lbProtocolCallback"
       stereotype "typedef" base_type class_ref 128711 // lbErrCodes
      
      cpp_decl "${comment}typedef ${type}(lb_I_ProtocolTarget::* ${name})( lb_I_Transfer_Data const &, lb_I_Transfer_Data&);
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "...e
...scallback \\47\\ handler typedefs:0:
*
 * This is a base class for all callback able objects
 
/////////////////////////////////////////////////////////////
 Type for lb protocol callback functions. This should be an interface."
      classrelation 133575 // <realization>
	relation 133575 -_-|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133575 // <realization>
	  b parent class_ref 128711 // lbErrCodes
      end
    end

    class 138951 "lbMemberCallback"
       stereotype "typedef" base_type class_ref 128711 // lbErrCodes
      
      cpp_decl "${comment}typedef ${type}(lb_I_CallbackTarget::* ${name})( const char* handlername, lb_I_Transfer_Data&);
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 133703 // <realization>
	relation 133703 -_-|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133703 // <realization>
	  b parent class_ref 128711 // lbErrCodes
      end
    end

    class 139079 "lb_I_EventCallback"
       stereotype "typedef" base_type class_ref 128711 // lbErrCodes
      
      cpp_decl "${comment}typedef ${type}(lb_I_EventSink::* ${name})(lb_I_Unknown* question, lb_I_Unknown* answer);
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 133831 // <realization>
	relation 133831 -_-|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133831 // <realization>
	  b parent class_ref 128711 // lbErrCodes
      end
    end

    class 139207 "lbEvHandler"
       stereotype "typedef" base_type class_ref 128711 // lbErrCodes
      
      cpp_decl "${comment}typedef ${type}(LB_STDCALL lb_I_EventHandler::* ${name})(lb_I_Unknown* uk);
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 133959 // <realization>
	relation 133959 -_-|>
	  a public
	    cpp default "Generated"
	    classrelation_ref 133959 // <realization>
	  b parent class_ref 128711 // lbErrCodes
      end
    end

    class 139335 "UAP"
      
      
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end
  end

  deploymentview 128071 "interfaces"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default
    draw_component_as_icon default show_component_req_prov default show_component_rea default
    artifact 128071 "lb_I_KeyBase"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128071 // lb_I_KeyBase
      end
    end

    artifact 128199 "ObjectTyp"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128327 // ObjectTyp
      end
    end

    artifact 128327 "lb_I_Object"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128455 // lb_I_Object
      end
    end

    artifact 128455 "lb_I_String"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128583 // lb_I_String
      end
    end

    artifact 128583 "lb_I_Integer"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128839 // lb_I_Integer
      end
    end

    artifact 128711 "lb_I_Boolean"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128967 // lb_I_Boolean
      end
    end

    artifact 128839 "lb_I_Long"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129095 // lb_I_Long
      end
    end

    artifact 128967 "lb_I_Parameter"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129223 // lb_I_Parameter
      end
    end

    artifact 129095 "lb_I_Element"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129479 // lb_I_Element
      end
    end

    artifact 129223 "lb_I_Container"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129351 // lb_I_Container
      end
    end

    artifact 129351 "lb_I_Module"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129607 // lb_I_Module
      end
    end

    artifact 129479 "lb_I_Instance"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129991 // lb_I_Instance
      end
    end

    artifact 129607 "lb_I_InstanceReference"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130119 // lb_I_InstanceReference
      end
    end

    artifact 129735 "lb_I_Log"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130247 // lb_I_Log
      end
    end

    artifact 129863 "lb_I_Runnable"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130375 // lb_I_Runnable
      end
    end

    artifact 129991 "lb_I_ZThread"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130503 // lb_I_ZThread
      end
    end

    artifact 130119 "lb_I_Thread"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130631 // lb_I_Thread
      end
    end

    artifact 130247 "lb_I_Mutex"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130759 // lb_I_Mutex
      end
    end

    artifact 130375 "lb_I_CriticalSection"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130887 // lb_I_CriticalSection
      end
    end

    artifact 130503 "lb_I_Lock"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131015 // lb_I_Lock
      end
    end

    artifact 130631 "lb_I_Query"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131271 // lb_I_Query
      end
    end

    artifact 130759 "lb_I_BoundColumn"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131783 // lb_I_BoundColumn
      end
    end

    artifact 130887 "lb_I_MVC_View"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131527 // lb_I_MVC_View
      end
    end

    artifact 131015 "lb_I_Connection"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132167 // lb_I_Connection
      end
    end

    artifact 131143 "lb_I_Database"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132295 // lb_I_Database
      end
    end

    artifact 131271 "lb_I_DatabaseForm"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132423 // lb_I_DatabaseForm
      end
    end

    artifact 131399 "lb_I_DatabaseReport"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132679 // lb_I_DatabaseReport
      end
    end

    artifact 131527 "lb_I_MasterDetailFormDefinition"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132807 // lb_I_MasterDetailFormDefinition
      end
    end

    artifact 131655 "lb_I_Window"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133063 // lb_I_Window
      end
    end

    artifact 131783 "lb_I_Form"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132551 // lb_I_Form
      end
    end

    artifact 131911 "lb_I_GUIApp"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133319 // lb_I_GUIApp
      end
    end

    artifact 132039 "lb_I_GUI"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133447 // lb_I_GUI
      end
    end

    artifact 132167 "lb_I_wxGUI"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133703 // lb_I_wxGUI
      end
    end

    artifact 132295 "lb_I_Control"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133831 // lb_I_Control
      end
    end

    artifact 132423 "lb_I_LogonPage"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 133959 // lb_I_LogonPage
      end
    end

    artifact 132551 "lb_I_AppSelectPage"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134087 // lb_I_AppSelectPage
      end
    end

    artifact 132679 "lb_I_LogonHandler"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134215 // lb_I_LogonHandler
      end
    end

    artifact 132807 "lb_I_Aspect"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134343 // lb_I_Aspect
      end
    end

    artifact 132935 "lb_I_FileOperation"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 135751 // lb_I_FileOperation
      end
    end

    artifact 133063 "lb_I_DatabaseOperation"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 137287 // lb_I_DatabaseOperation
      end
    end

    artifact 133191 "lb_I_wxFrame"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 136647 // lb_I_wxFrame
      end
    end

    artifact 133319 "lb_I_Attribute"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138055 // lb_I_Attribute
      end
    end

    artifact 133447 "lb_I_ConfigObject"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129863 // lb_I_ConfigObject
      end
    end

    artifact 133575 "lb_I_XMLConfig"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138183 // lb_I_XMLConfig
      end
    end

    artifact 133703 "lb_I_FunctorEntity"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134727 // lb_I_FunctorEntity
      end
    end

    artifact 133831 "lb_I_InterfaceRepository"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 134599 // lb_I_InterfaceRepository
      end
    end

    artifact 133959 "byte"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138311 // byte
      end
    end

    artifact 134087 "u_short"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138439 // u_short
      end
    end

    artifact 134215 "DWORD"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138567 // DWORD
      end
    end

    artifact 134343 "LB_DATA"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138695 // LB_DATA
      end
    end

    artifact 134471 "lbProtocolCallback"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138823 // lbProtocolCallback
      end
    end

    artifact 134599 "lbMemberCallback"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 138951 // lbMemberCallback
      end
    end

    artifact 134727 "lb_I_EventCallback"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 139079 // lb_I_EventCallback
      end
    end

    artifact 134855 "lbEvHandler"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 139207 // lbEvHandler
      end
    end

    artifact 134983 "lb_I_Unknown"
      stereotype "source"
      cpp_h "#ifndef _${NAME}_H
#define _${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128199 // lb_I_Unknown
      end
    end
  end
end
